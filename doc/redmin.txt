跟之前框架技术的优势
    
     拦截器，并发请求限制                                                                                                                                                           拦截器，指定动态数据源
请求================>入口（web层）==>公用验证，验证请求数据（web层）==>获取请求数据调用业务层（web层）=======================>业务层（事物控制层）===>DAO层，与数据库交互

            		============================================web层============================  ===================业务处理层====================

1、请求数量限制（可配置，拦截器做，不影响程序并发与消耗时间），限制并不等于前端可以放无数请求到后台！
	限制原理：在请求进入业务层之前，判断后台有多少请求没有返回，达到后台请求设置的峰值，则，在直接返回前台，不进入控制业务层。
	限制优势：可以控制后台线程运行数/并发数。
	并发很大（达到数据库并发峰值）：可以避免数据库奔溃。
	并发很大（应用并发峰值）：
	
2、数据库连接池，采用BoneCP做连接池，获取连接与关闭连接是c3p0，dbcp几十倍到百倍以上。
	优点：性能高。
  	BoneCP：采用多线程加锁机制来进行获取连接，关闭连接。
  	c3p0，dbcp：采用的是单线程获取数据库连接。
  	注意：阿里提供的连接池，没有试过。之后又时间再试。
  	
3、JSON转换，采用阿里提供的Fastjson。
	特点：性能高，是其他常用的转换百倍以上。舜凯云商采用jackson
	比较：jackson（效率是最慢的，但是，与spring有很多线程的拦截器，封装比较丰富），
		  gson（性能比jackson高，但是比fastjson低）
		  fastjson（性能非常高。）
		  
4、日志记录（采用slf4j + logback）
	sl4j + logback：在并发记录日志的时候，是log4j的几十倍以上。除去并发情况，sl4j + logback在性能上差不多。
	
5、主从库（拦截器配置动态数据源）
	程序不需动，只需更改配置文件与拦截器。
	
6、优化定时任务（跟原来一样quartz组件），可随时嵌入。
	原理：用数据库表来控制定时任务。
	优点：可支持集群，配置简单，服务器宕机之后，会记录没有跑的job，可指定某时间定执行数据（舜凯云商：活动job，就是没隔1分钟跑一次，可以完美替换某个时间点去执行，提高性能）
	缺点：依赖于数据库表。
	
7、部署采用resin应用服务（待完成，本地测试效果比较好，但应配置不是很了解，还需要进一步了解）
	优点：性能高，比tomcat，jetty性能，并发，要高很多。
	
8、本地测试结果（resin应用服务，和tomcat应用服务）：
	本地4核8G，本地数据库，模拟下单，四个查询，两个添加，电脑本身默认占用4G内存：
	5000次请求，每秒300次请求，resin服务器22秒完成，cpu达到90%左右，内存6G左右。
	5000次请求，每秒300次请求，tomcat服务器29秒完成，cpu达到90%左右，内存6G左右。
      阿里云服务器测试（新加坡的数据库与服务器）
        服务器：2核4G，宽带5M
    5000次请求，每秒100次请求，jetty服务器59秒完成，cpu不稳定，百分之百以上，时百分之几。
		