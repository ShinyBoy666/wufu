<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.AgentDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.Agent">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="name" jdbcType="VARCHAR" property="name" />
	   <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
	   <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
	   <result column="sex" jdbcType="INTEGER" property="sex" />
	   <result column="shop_register_amount" jdbcType="DOUBLE" property="shopRegisterAmount" />
	   <result column="province_id" jdbcType="INTEGER" property="provinceId" />
	   <result column="city_id" jdbcType="INTEGER" property="cityId" />
	   <result column="district_id" jdbcType="INTEGER" property="districtId" />
	   <result column="cash_amount" jdbcType="DOUBLE" property="cashAmount" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    name,
    cellphone,
    identity_card,
    sex,
    shop_register_amount,
    province_id,
    city_id,
    district_id,
    cash_amount,
    state,
    create_time,
    create_user,
    update_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from a_agent  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.AgentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  a_agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.AgentExample">
     delete from  a_agent where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.AgentExample">
    delete from  a_agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.Agent" useGeneratedKeys="true" keyProperty="id">
    insert into a_agent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="identityCard != null">
        identity_card,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="shopRegisterAmount != null">
        shop_register_amount,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="name != null">
        #{ name,jdbcType=VARCHAR },
      </if>
      <if test="cellphone != null">
        #{ cellphone,jdbcType=VARCHAR },
      </if>
      <if test="identityCard != null">
        #{ identityCard,jdbcType=VARCHAR },
      </if>
      <if test="sex != null">
        #{ sex,jdbcType=INTEGER },
      </if>
      <if test="shopRegisterAmount != null">
        #{ shopRegisterAmount,jdbcType=DOUBLE },
      </if>
      <if test="provinceId != null">
        #{ provinceId,jdbcType=INTEGER },
      </if>
      <if test="cityId != null">
        #{ cityId,jdbcType=INTEGER },
      </if>
      <if test="districtId != null">
        #{ districtId,jdbcType=INTEGER },
      </if>
      <if test="cashAmount != null">
        #{ cashAmount,jdbcType=DOUBLE },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into a_agent 
    (
      name,
      cellphone,
      identity_card,
      sex,
      shop_register_amount,
      province_id,
      city_id,
      district_id,
      cash_amount,
      state,
      create_time,
      create_user,
      update_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.name,jdbcType=VARCHAR },
     #{ item.cellphone,jdbcType=VARCHAR },
     #{ item.identityCard,jdbcType=VARCHAR },
     #{ item.sex,jdbcType=INTEGER },
     #{ item.shopRegisterAmount,jdbcType=DOUBLE },
     #{ item.provinceId,jdbcType=INTEGER },
     #{ item.cityId,jdbcType=INTEGER },
     #{ item.districtId,jdbcType=INTEGER },
     #{ item.cashAmount,jdbcType=DOUBLE },
     #{ item.state,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.AgentExample" resultType="java.lang.Integer">
    select count(*) from a_agent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update a_agent set 
	      name = #{record.name,jdbcType=VARCHAR},
	      cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      identity_card = #{record.identityCard,jdbcType=VARCHAR},
	      sex = #{record.sex,jdbcType=INTEGER},
	      shop_register_amount = #{record.shopRegisterAmount,jdbcType=DOUBLE},
	      province_id = #{record.provinceId,jdbcType=INTEGER},
	      city_id = #{record.cityId,jdbcType=INTEGER},
	      district_id = #{record.districtId,jdbcType=INTEGER},
	      cash_amount = #{record.cashAmount,jdbcType=DOUBLE},
	      state = #{record.state,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update a_agent 
    <set> 
	      <if test="record.name != null">
	        name = #{record.name,jdbcType=VARCHAR},
	      </if>
	      <if test="record.cellphone != null">
	        cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.identityCard != null">
	        identity_card = #{record.identityCard,jdbcType=VARCHAR},
	      </if>
	      <if test="record.sex != null">
	        sex = #{record.sex,jdbcType=INTEGER},
	      </if>
	      <if test="record.shopRegisterAmount != null">
	        shop_register_amount = #{record.shopRegisterAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.provinceId != null">
	        province_id = #{record.provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cityId != null">
	        city_id = #{record.cityId,jdbcType=INTEGER},
	      </if>
	      <if test="record.districtId != null">
	        district_id = #{record.districtId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cashAmount != null">
	        cash_amount = #{record.cashAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Agent">
    update a_agent 
    <set> 
	      <if test="name != null">
	        name = #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="cellphone != null">
	        cellphone = #{cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="identityCard != null">
	        identity_card = #{identityCard,jdbcType=VARCHAR},
	      </if>
	      <if test="sex != null">
	        sex = #{sex,jdbcType=INTEGER},
	      </if>
	      <if test="shopRegisterAmount != null">
	        shop_register_amount = #{shopRegisterAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="provinceId != null">
	        province_id = #{provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="cityId != null">
	        city_id = #{cityId,jdbcType=INTEGER},
	      </if>
	      <if test="districtId != null">
	        district_id = #{districtId,jdbcType=INTEGER},
	      </if>
	      <if test="cashAmount != null">
	        cash_amount = #{cashAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Agent">
    update a_agent set
        name = #{name,jdbcType=VARCHAR},
        cellphone = #{cellphone,jdbcType=VARCHAR},
        identity_card = #{identityCard,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=INTEGER},
        shop_register_amount = #{shopRegisterAmount,jdbcType=DOUBLE},
        province_id = #{provinceId,jdbcType=INTEGER},
        city_id = #{cityId,jdbcType=INTEGER},
        district_id = #{districtId,jdbcType=INTEGER},
        cash_amount = #{cashAmount,jdbcType=DOUBLE},
        state = #{state,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>