<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.PlanInfoDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.PlanInfo">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="token" jdbcType="VARCHAR" property="token" />
	   <result column="job_service_no" jdbcType="INTEGER" property="jobServiceNo" />
	   <result column="plan_type" jdbcType="INTEGER" property="planType" />
	   <result column="plan_value" jdbcType="INTEGER" property="planValue" />
	   <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="max_repeat_count" jdbcType="INTEGER" property="maxRepeatCount" />
	   <result column="failed_count" jdbcType="INTEGER" property="failedCount" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    token,
    job_service_no,
    plan_type,
    plan_value,
    begin_time,
    remark,
    max_repeat_count,
    failed_count,
    create_time,
    create_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from j_plan_info  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.PlanInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  j_plan_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.PlanInfoExample">
     delete from  j_plan_info where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.PlanInfoExample">
    delete from  j_plan_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.PlanInfo" useGeneratedKeys="true" keyProperty="id">
    insert into j_plan_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="jobServiceNo != null">
        job_service_no,
      </if>
      <if test="planType != null">
        plan_type,
      </if>
      <if test="planValue != null">
        plan_value,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="maxRepeatCount != null">
        max_repeat_count,
      </if>
      <if test="failedCount != null">
        failed_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="token != null">
        #{ token,jdbcType=VARCHAR },
      </if>
      <if test="jobServiceNo != null">
        #{ jobServiceNo,jdbcType=INTEGER },
      </if>
      <if test="planType != null">
        #{ planType,jdbcType=INTEGER },
      </if>
      <if test="planValue != null">
        #{ planValue,jdbcType=INTEGER },
      </if>
      <if test="beginTime != null">
        #{ beginTime,jdbcType=TIMESTAMP },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="maxRepeatCount != null">
        #{ maxRepeatCount,jdbcType=INTEGER },
      </if>
      <if test="failedCount != null">
        #{ failedCount,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into j_plan_info 
    (
      token,
      job_service_no,
      plan_type,
      plan_value,
      begin_time,
      remark,
      max_repeat_count,
      failed_count,
      create_time,
      create_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.token,jdbcType=VARCHAR },
     #{ item.jobServiceNo,jdbcType=INTEGER },
     #{ item.planType,jdbcType=INTEGER },
     #{ item.planValue,jdbcType=INTEGER },
     #{ item.beginTime,jdbcType=TIMESTAMP },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.maxRepeatCount,jdbcType=INTEGER },
     #{ item.failedCount,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.PlanInfoExample" resultType="java.lang.Integer">
    select count(*) from j_plan_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update j_plan_info set 
	      token = #{record.token,jdbcType=VARCHAR},
	      job_service_no = #{record.jobServiceNo,jdbcType=INTEGER},
	      plan_type = #{record.planType,jdbcType=INTEGER},
	      plan_value = #{record.planValue,jdbcType=INTEGER},
	      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      max_repeat_count = #{record.maxRepeatCount,jdbcType=INTEGER},
	      failed_count = #{record.failedCount,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update j_plan_info 
    <set> 
	      <if test="record.token != null">
	        token = #{record.token,jdbcType=VARCHAR},
	      </if>
	      <if test="record.jobServiceNo != null">
	        job_service_no = #{record.jobServiceNo,jdbcType=INTEGER},
	      </if>
	      <if test="record.planType != null">
	        plan_type = #{record.planType,jdbcType=INTEGER},
	      </if>
	      <if test="record.planValue != null">
	        plan_value = #{record.planValue,jdbcType=INTEGER},
	      </if>
	      <if test="record.beginTime != null">
	        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.maxRepeatCount != null">
	        max_repeat_count = #{record.maxRepeatCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.failedCount != null">
	        failed_count = #{record.failedCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.PlanInfo">
    update j_plan_info 
    <set> 
	      <if test="token != null">
	        token = #{token,jdbcType=VARCHAR},
	      </if>
	      <if test="jobServiceNo != null">
	        job_service_no = #{jobServiceNo,jdbcType=INTEGER},
	      </if>
	      <if test="planType != null">
	        plan_type = #{planType,jdbcType=INTEGER},
	      </if>
	      <if test="planValue != null">
	        plan_value = #{planValue,jdbcType=INTEGER},
	      </if>
	      <if test="beginTime != null">
	        begin_time = #{beginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="maxRepeatCount != null">
	        max_repeat_count = #{maxRepeatCount,jdbcType=INTEGER},
	      </if>
	      <if test="failedCount != null">
	        failed_count = #{failedCount,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.PlanInfo">
    update j_plan_info set
        token = #{token,jdbcType=VARCHAR},
        job_service_no = #{jobServiceNo,jdbcType=INTEGER},
        plan_type = #{planType,jdbcType=INTEGER},
        plan_value = #{planValue,jdbcType=INTEGER},
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
        remark = #{remark,jdbcType=VARCHAR},
        max_repeat_count = #{maxRepeatCount,jdbcType=INTEGER},
        failed_count = #{failedCount,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>