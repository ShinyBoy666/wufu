<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CustomerDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.Customer">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="recommend_code" jdbcType="VARCHAR" property="recommendCode" />
	   <result column="token" jdbcType="VARCHAR" property="token" />
	   <result column="password" jdbcType="VARCHAR" property="password" />
	   <result column="province_id" jdbcType="INTEGER" property="provinceId" />
	   <result column="city_id" jdbcType="INTEGER" property="cityId" />
	   <result column="district_id" jdbcType="INTEGER" property="districtId" />
	   <result column="recommend_customer_id" jdbcType="INTEGER" property="recommendCustomerId" />
	   <result column="shop_id" jdbcType="INTEGER" property="shopId" />
	   <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
	   <result column="open_id" jdbcType="VARCHAR" property="openId" />
	   <result column="nickname" jdbcType="VARCHAR" property="nickname" />
	   <result column="customer_category" jdbcType="VARCHAR" property="customerCategory" />
	   <result column="head_sculpture" jdbcType="VARCHAR" property="headSculpture" />
	   <result column="level" jdbcType="INTEGER" property="level" />
	   <result column="sex" jdbcType="INTEGER" property="sex" />
	   <result column="cash_amount" jdbcType="DOUBLE" property="cashAmount" />
	   <result column="score_amount" jdbcType="INTEGER" property="scoreAmount" />
	   <result column="extension_amount" jdbcType="DOUBLE" property="extensionAmount" />
	   <result column="cashback_amount" jdbcType="DOUBLE" property="cashbackAmount" />
	   <result column="contribution_amount" jdbcType="DOUBLE" property="contributionAmount" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="open_time" jdbcType="TIMESTAMP" property="openTime" />
	   <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
	   <result column="getui_id" jdbcType="VARCHAR" property="getuiId" />
	   <result column="imei" jdbcType="VARCHAR" property="imei" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    recommend_code,
    token,
    password,
    province_id,
    city_id,
    district_id,
    recommend_customer_id,
    shop_id,
    cellphone,
    open_id,
    nickname,
    customer_category,
    head_sculpture,
    level,
    sex,
    cash_amount,
    score_amount,
    extension_amount,
    cashback_amount,
    contribution_amount,
    state,
    open_time,
    end_time,
    getui_id,
    imei,
    create_time,
    create_user,
    update_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from c_customer  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  c_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CustomerExample">
     delete from  c_customer where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerExample">
    delete from  c_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.Customer" useGeneratedKeys="true" keyProperty="id">
    insert into c_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recommendCode != null">
        recommend_code,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="recommendCustomerId != null">
        recommend_customer_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="customerCategory != null">
        customer_category,
      </if>
      <if test="headSculpture != null">
        head_sculpture,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="scoreAmount != null">
        score_amount,
      </if>
      <if test="extensionAmount != null">
        extension_amount,
      </if>
      <if test="cashbackAmount != null">
        cashback_amount,
      </if>
      <if test="contributionAmount != null">
        contribution_amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="openTime != null">
        open_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="getuiId != null">
        getui_id,
      </if>
      <if test="imei != null">
        imei,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="recommendCode != null">
        #{ recommendCode,jdbcType=VARCHAR },
      </if>
      <if test="token != null">
        #{ token,jdbcType=VARCHAR },
      </if>
      <if test="password != null">
        #{ password,jdbcType=VARCHAR },
      </if>
      <if test="provinceId != null">
        #{ provinceId,jdbcType=INTEGER },
      </if>
      <if test="cityId != null">
        #{ cityId,jdbcType=INTEGER },
      </if>
      <if test="districtId != null">
        #{ districtId,jdbcType=INTEGER },
      </if>
      <if test="recommendCustomerId != null">
        #{ recommendCustomerId,jdbcType=INTEGER },
      </if>
      <if test="shopId != null">
        #{ shopId,jdbcType=INTEGER },
      </if>
      <if test="cellphone != null">
        #{ cellphone,jdbcType=VARCHAR },
      </if>
      <if test="openId != null">
        #{ openId,jdbcType=VARCHAR },
      </if>
      <if test="nickname != null">
        #{ nickname,jdbcType=VARCHAR },
      </if>
      <if test="customerCategory != null">
        #{ customerCategory,jdbcType=VARCHAR },
      </if>
      <if test="headSculpture != null">
        #{ headSculpture,jdbcType=VARCHAR },
      </if>
      <if test="level != null">
        #{ level,jdbcType=INTEGER },
      </if>
      <if test="sex != null">
        #{ sex,jdbcType=INTEGER },
      </if>
      <if test="cashAmount != null">
        #{ cashAmount,jdbcType=DOUBLE },
      </if>
      <if test="scoreAmount != null">
        #{ scoreAmount,jdbcType=INTEGER },
      </if>
      <if test="extensionAmount != null">
        #{ extensionAmount,jdbcType=DOUBLE },
      </if>
      <if test="cashbackAmount != null">
        #{ cashbackAmount,jdbcType=DOUBLE },
      </if>
      <if test="contributionAmount != null">
        #{ contributionAmount,jdbcType=DOUBLE },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="openTime != null">
        #{ openTime,jdbcType=TIMESTAMP },
      </if>
      <if test="endTime != null">
        #{ endTime,jdbcType=TIMESTAMP },
      </if>
      <if test="getuiId != null">
        #{ getuiId,jdbcType=VARCHAR },
      </if>
      <if test="imei != null">
        #{ imei,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into c_customer 
    (
      recommend_code,
      token,
      password,
      province_id,
      city_id,
      district_id,
      recommend_customer_id,
      shop_id,
      cellphone,
      open_id,
      nickname,
      customer_category,
      head_sculpture,
      level,
      sex,
      cash_amount,
      score_amount,
      extension_amount,
      cashback_amount,
      contribution_amount,
      state,
      open_time,
      end_time,
      getui_id,
      imei,
      create_time,
      create_user,
      update_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.recommendCode,jdbcType=VARCHAR },
     #{ item.token,jdbcType=VARCHAR },
     #{ item.password,jdbcType=VARCHAR },
     #{ item.provinceId,jdbcType=INTEGER },
     #{ item.cityId,jdbcType=INTEGER },
     #{ item.districtId,jdbcType=INTEGER },
     #{ item.recommendCustomerId,jdbcType=INTEGER },
     #{ item.shopId,jdbcType=INTEGER },
     #{ item.cellphone,jdbcType=VARCHAR },
     #{ item.openId,jdbcType=VARCHAR },
     #{ item.nickname,jdbcType=VARCHAR },
     #{ item.customerCategory,jdbcType=VARCHAR },
     #{ item.headSculpture,jdbcType=VARCHAR },
     #{ item.level,jdbcType=INTEGER },
     #{ item.sex,jdbcType=INTEGER },
     #{ item.cashAmount,jdbcType=DOUBLE },
     #{ item.scoreAmount,jdbcType=INTEGER },
     #{ item.extensionAmount,jdbcType=DOUBLE },
     #{ item.cashbackAmount,jdbcType=DOUBLE },
     #{ item.contributionAmount,jdbcType=DOUBLE },
     #{ item.state,jdbcType=INTEGER },
     #{ item.openTime,jdbcType=TIMESTAMP },
     #{ item.endTime,jdbcType=TIMESTAMP },
     #{ item.getuiId,jdbcType=VARCHAR },
     #{ item.imei,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerExample" resultType="java.lang.Integer">
    select count(*) from c_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update c_customer set 
	      recommend_code = #{record.recommendCode,jdbcType=VARCHAR},
	      token = #{record.token,jdbcType=VARCHAR},
	      password = #{record.password,jdbcType=VARCHAR},
	      province_id = #{record.provinceId,jdbcType=INTEGER},
	      city_id = #{record.cityId,jdbcType=INTEGER},
	      district_id = #{record.districtId,jdbcType=INTEGER},
	      recommend_customer_id = #{record.recommendCustomerId,jdbcType=INTEGER},
	      shop_id = #{record.shopId,jdbcType=INTEGER},
	      cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      open_id = #{record.openId,jdbcType=VARCHAR},
	      nickname = #{record.nickname,jdbcType=VARCHAR},
	      customer_category = #{record.customerCategory,jdbcType=VARCHAR},
	      head_sculpture = #{record.headSculpture,jdbcType=VARCHAR},
	      level = #{record.level,jdbcType=INTEGER},
	      sex = #{record.sex,jdbcType=INTEGER},
	      cash_amount = #{record.cashAmount,jdbcType=DOUBLE},
	      score_amount = #{record.scoreAmount,jdbcType=INTEGER},
	      extension_amount = #{record.extensionAmount,jdbcType=DOUBLE},
	      cashback_amount = #{record.cashbackAmount,jdbcType=DOUBLE},
	      contribution_amount = #{record.contributionAmount,jdbcType=DOUBLE},
	      state = #{record.state,jdbcType=INTEGER},
	      open_time = #{record.openTime,jdbcType=TIMESTAMP},
	      end_time = #{record.endTime,jdbcType=TIMESTAMP},
	      getui_id = #{record.getuiId,jdbcType=VARCHAR},
	      imei = #{record.imei,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update c_customer 
    <set> 
	      <if test="record.recommendCode != null">
	        recommend_code = #{record.recommendCode,jdbcType=VARCHAR},
	      </if>
	      <if test="record.token != null">
	        token = #{record.token,jdbcType=VARCHAR},
	      </if>
	      <if test="record.password != null">
	        password = #{record.password,jdbcType=VARCHAR},
	      </if>
	      <if test="record.provinceId != null">
	        province_id = #{record.provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cityId != null">
	        city_id = #{record.cityId,jdbcType=INTEGER},
	      </if>
	      <if test="record.districtId != null">
	        district_id = #{record.districtId,jdbcType=INTEGER},
	      </if>
	      <if test="record.recommendCustomerId != null">
	        recommend_customer_id = #{record.recommendCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.shopId != null">
	        shop_id = #{record.shopId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cellphone != null">
	        cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.openId != null">
	        open_id = #{record.openId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.nickname != null">
	        nickname = #{record.nickname,jdbcType=VARCHAR},
	      </if>
	      <if test="record.customerCategory != null">
	        customer_category = #{record.customerCategory,jdbcType=VARCHAR},
	      </if>
	      <if test="record.headSculpture != null">
	        head_sculpture = #{record.headSculpture,jdbcType=VARCHAR},
	      </if>
	      <if test="record.level != null">
	        level = #{record.level,jdbcType=INTEGER},
	      </if>
	      <if test="record.sex != null">
	        sex = #{record.sex,jdbcType=INTEGER},
	      </if>
	      <if test="record.cashAmount != null">
	        cash_amount = #{record.cashAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.scoreAmount != null">
	        score_amount = #{record.scoreAmount,jdbcType=INTEGER},
	      </if>
	      <if test="record.extensionAmount != null">
	        extension_amount = #{record.extensionAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.cashbackAmount != null">
	        cashback_amount = #{record.cashbackAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.contributionAmount != null">
	        contribution_amount = #{record.contributionAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.openTime != null">
	        open_time = #{record.openTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.endTime != null">
	        end_time = #{record.endTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.getuiId != null">
	        getui_id = #{record.getuiId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.imei != null">
	        imei = #{record.imei,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Customer">
    update c_customer 
    <set> 
	      <if test="recommendCode != null">
	        recommend_code = #{recommendCode,jdbcType=VARCHAR},
	      </if>
	      <if test="token != null">
	        token = #{token,jdbcType=VARCHAR},
	      </if>
	      <if test="password != null">
	        password = #{password,jdbcType=VARCHAR},
	      </if>
	      <if test="provinceId != null">
	        province_id = #{provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="cityId != null">
	        city_id = #{cityId,jdbcType=INTEGER},
	      </if>
	      <if test="districtId != null">
	        district_id = #{districtId,jdbcType=INTEGER},
	      </if>
	      <if test="recommendCustomerId != null">
	        recommend_customer_id = #{recommendCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="shopId != null">
	        shop_id = #{shopId,jdbcType=INTEGER},
	      </if>
	      <if test="cellphone != null">
	        cellphone = #{cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="openId != null">
	        open_id = #{openId,jdbcType=VARCHAR},
	      </if>
	      <if test="nickname != null">
	        nickname = #{nickname,jdbcType=VARCHAR},
	      </if>
	      <if test="customerCategory != null">
	        customer_category = #{customerCategory,jdbcType=VARCHAR},
	      </if>
	      <if test="headSculpture != null">
	        head_sculpture = #{headSculpture,jdbcType=VARCHAR},
	      </if>
	      <if test="level != null">
	        level = #{level,jdbcType=INTEGER},
	      </if>
	      <if test="sex != null">
	        sex = #{sex,jdbcType=INTEGER},
	      </if>
	      <if test="cashAmount != null">
	        cash_amount = #{cashAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="scoreAmount != null">
	        score_amount = #{scoreAmount,jdbcType=INTEGER},
	      </if>
	      <if test="extensionAmount != null">
	        extension_amount = #{extensionAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="cashbackAmount != null">
	        cashback_amount = #{cashbackAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="contributionAmount != null">
	        contribution_amount = #{contributionAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="openTime != null">
	        open_time = #{openTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="endTime != null">
	        end_time = #{endTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="getuiId != null">
	        getui_id = #{getuiId,jdbcType=VARCHAR},
	      </if>
	      <if test="imei != null">
	        imei = #{imei,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Customer">
    update c_customer set
        recommend_code = #{recommendCode,jdbcType=VARCHAR},
        token = #{token,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        province_id = #{provinceId,jdbcType=INTEGER},
        city_id = #{cityId,jdbcType=INTEGER},
        district_id = #{districtId,jdbcType=INTEGER},
        recommend_customer_id = #{recommendCustomerId,jdbcType=INTEGER},
        shop_id = #{shopId,jdbcType=INTEGER},
        cellphone = #{cellphone,jdbcType=VARCHAR},
        open_id = #{openId,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        customer_category = #{customerCategory,jdbcType=VARCHAR},
        head_sculpture = #{headSculpture,jdbcType=VARCHAR},
        level = #{level,jdbcType=INTEGER},
        sex = #{sex,jdbcType=INTEGER},
        cash_amount = #{cashAmount,jdbcType=DOUBLE},
        score_amount = #{scoreAmount,jdbcType=INTEGER},
        extension_amount = #{extensionAmount,jdbcType=DOUBLE},
        cashback_amount = #{cashbackAmount,jdbcType=DOUBLE},
        contribution_amount = #{contributionAmount,jdbcType=DOUBLE},
        state = #{state,jdbcType=INTEGER},
        open_time = #{openTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        getui_id = #{getuiId,jdbcType=VARCHAR},
        imei = #{imei,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>