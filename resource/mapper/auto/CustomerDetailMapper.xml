<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CustomerDetailDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.CustomerDetail">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="realname" jdbcType="VARCHAR" property="realname" />
	   <result column="email" jdbcType="VARCHAR" property="email" />
	   <result column="wechat" jdbcType="VARCHAR" property="wechat" />
	   <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
	   <result column="qq" jdbcType="VARCHAR" property="qq" />
	   <result column="weibo" jdbcType="VARCHAR" property="weibo" />
	   <result column="device_type" jdbcType="INTEGER" property="deviceType" />
	   <result column="channel_type" jdbcType="INTEGER" property="channelType" />
	   <result column="channel_id" jdbcType="INTEGER" property="channelId" />
	   <result column="register_version" jdbcType="VARCHAR" property="registerVersion" />
	   <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	   <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    customer_id,
    realname,
    email,
    wechat,
    identity_card,
    qq,
    weibo,
    device_type,
    channel_type,
    channel_id,
    register_version,
    last_login_time,
    create_time,
    create_user,
    update_time,
    update_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from c_customer_detail  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  c_customer_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CustomerDetailExample">
     delete from  c_customer_detail where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerDetailExample">
    delete from  c_customer_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.CustomerDetail" useGeneratedKeys="true" keyProperty="id">
    insert into c_customer_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="identityCard != null">
        identity_card,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="channelType != null">
        channel_type,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="registerVersion != null">
        register_version,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="realname != null">
        #{ realname,jdbcType=VARCHAR },
      </if>
      <if test="email != null">
        #{ email,jdbcType=VARCHAR },
      </if>
      <if test="wechat != null">
        #{ wechat,jdbcType=VARCHAR },
      </if>
      <if test="identityCard != null">
        #{ identityCard,jdbcType=VARCHAR },
      </if>
      <if test="qq != null">
        #{ qq,jdbcType=VARCHAR },
      </if>
      <if test="weibo != null">
        #{ weibo,jdbcType=VARCHAR },
      </if>
      <if test="deviceType != null">
        #{ deviceType,jdbcType=INTEGER },
      </if>
      <if test="channelType != null">
        #{ channelType,jdbcType=INTEGER },
      </if>
      <if test="channelId != null">
        #{ channelId,jdbcType=INTEGER },
      </if>
      <if test="registerVersion != null">
        #{ registerVersion,jdbcType=VARCHAR },
      </if>
      <if test="lastLoginTime != null">
        #{ lastLoginTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
      <if test="updateUser != null">
        #{ updateUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into c_customer_detail 
    (
      customer_id,
      realname,
      email,
      wechat,
      identity_card,
      qq,
      weibo,
      device_type,
      channel_type,
      channel_id,
      register_version,
      last_login_time,
      create_time,
      create_user,
      update_time,
      update_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.realname,jdbcType=VARCHAR },
     #{ item.email,jdbcType=VARCHAR },
     #{ item.wechat,jdbcType=VARCHAR },
     #{ item.identityCard,jdbcType=VARCHAR },
     #{ item.qq,jdbcType=VARCHAR },
     #{ item.weibo,jdbcType=VARCHAR },
     #{ item.deviceType,jdbcType=INTEGER },
     #{ item.channelType,jdbcType=INTEGER },
     #{ item.channelId,jdbcType=INTEGER },
     #{ item.registerVersion,jdbcType=VARCHAR },
     #{ item.lastLoginTime,jdbcType=TIMESTAMP },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP },
     #{ item.updateUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerDetailExample" resultType="java.lang.Integer">
    select count(*) from c_customer_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update c_customer_detail set 
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      realname = #{record.realname,jdbcType=VARCHAR},
	      email = #{record.email,jdbcType=VARCHAR},
	      wechat = #{record.wechat,jdbcType=VARCHAR},
	      identity_card = #{record.identityCard,jdbcType=VARCHAR},
	      qq = #{record.qq,jdbcType=VARCHAR},
	      weibo = #{record.weibo,jdbcType=VARCHAR},
	      device_type = #{record.deviceType,jdbcType=INTEGER},
	      channel_type = #{record.channelType,jdbcType=INTEGER},
	      channel_id = #{record.channelId,jdbcType=INTEGER},
	      register_version = #{record.registerVersion,jdbcType=VARCHAR},
	      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update c_customer_detail 
    <set> 
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.realname != null">
	        realname = #{record.realname,jdbcType=VARCHAR},
	      </if>
	      <if test="record.email != null">
	        email = #{record.email,jdbcType=VARCHAR},
	      </if>
	      <if test="record.wechat != null">
	        wechat = #{record.wechat,jdbcType=VARCHAR},
	      </if>
	      <if test="record.identityCard != null">
	        identity_card = #{record.identityCard,jdbcType=VARCHAR},
	      </if>
	      <if test="record.qq != null">
	        qq = #{record.qq,jdbcType=VARCHAR},
	      </if>
	      <if test="record.weibo != null">
	        weibo = #{record.weibo,jdbcType=VARCHAR},
	      </if>
	      <if test="record.deviceType != null">
	        device_type = #{record.deviceType,jdbcType=INTEGER},
	      </if>
	      <if test="record.channelType != null">
	        channel_type = #{record.channelType,jdbcType=INTEGER},
	      </if>
	      <if test="record.channelId != null">
	        channel_id = #{record.channelId,jdbcType=INTEGER},
	      </if>
	      <if test="record.registerVersion != null">
	        register_version = #{record.registerVersion,jdbcType=VARCHAR},
	      </if>
	      <if test="record.lastLoginTime != null">
	        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateUser != null">
	        update_user = #{record.updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerDetail">
    update c_customer_detail 
    <set> 
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="realname != null">
	        realname = #{realname,jdbcType=VARCHAR},
	      </if>
	      <if test="email != null">
	        email = #{email,jdbcType=VARCHAR},
	      </if>
	      <if test="wechat != null">
	        wechat = #{wechat,jdbcType=VARCHAR},
	      </if>
	      <if test="identityCard != null">
	        identity_card = #{identityCard,jdbcType=VARCHAR},
	      </if>
	      <if test="qq != null">
	        qq = #{qq,jdbcType=VARCHAR},
	      </if>
	      <if test="weibo != null">
	        weibo = #{weibo,jdbcType=VARCHAR},
	      </if>
	      <if test="deviceType != null">
	        device_type = #{deviceType,jdbcType=INTEGER},
	      </if>
	      <if test="channelType != null">
	        channel_type = #{channelType,jdbcType=INTEGER},
	      </if>
	      <if test="channelId != null">
	        channel_id = #{channelId,jdbcType=INTEGER},
	      </if>
	      <if test="registerVersion != null">
	        register_version = #{registerVersion,jdbcType=VARCHAR},
	      </if>
	      <if test="lastLoginTime != null">
	        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null">
	        update_user = #{updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerDetail">
    update c_customer_detail set
        customer_id = #{customerId,jdbcType=INTEGER},
        realname = #{realname,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        wechat = #{wechat,jdbcType=VARCHAR},
        identity_card = #{identityCard,jdbcType=VARCHAR},
        qq = #{qq,jdbcType=VARCHAR},
        weibo = #{weibo,jdbcType=VARCHAR},
        device_type = #{deviceType,jdbcType=INTEGER},
        channel_type = #{channelType,jdbcType=INTEGER},
        channel_id = #{channelId,jdbcType=INTEGER},
        register_version = #{registerVersion,jdbcType=VARCHAR},
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>