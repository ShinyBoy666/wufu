<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.SystemLogDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.SystemLog">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="platform" jdbcType="INTEGER" property="platform" />
	   <result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
	   <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
	   <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
	   <result column="page_name" jdbcType="VARCHAR" property="pageName" />
	   <result column="page_url" jdbcType="VARCHAR" property="pageUrl" />
	   <result column="action_type" jdbcType="INTEGER" property="actionType" />
	   <result column="ip" jdbcType="VARCHAR" property="ip" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="history_record" jdbcType="VARCHAR" property="historyRecord" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    platform,
    employee_id,
    employee_name,
    module_name,
    page_name,
    page_url,
    action_type,
    ip,
    remark,
    history_record,
    create_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from s_system_log  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.SystemLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  s_system_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.SystemLogExample">
     delete from  s_system_log where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.SystemLogExample">
    delete from  s_system_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.SystemLog" useGeneratedKeys="true" keyProperty="id">
    insert into s_system_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="pageName != null">
        page_name,
      </if>
      <if test="pageUrl != null">
        page_url,
      </if>
      <if test="actionType != null">
        action_type,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="historyRecord != null">
        history_record,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="platform != null">
        #{ platform,jdbcType=INTEGER },
      </if>
      <if test="employeeId != null">
        #{ employeeId,jdbcType=VARCHAR },
      </if>
      <if test="employeeName != null">
        #{ employeeName,jdbcType=VARCHAR },
      </if>
      <if test="moduleName != null">
        #{ moduleName,jdbcType=VARCHAR },
      </if>
      <if test="pageName != null">
        #{ pageName,jdbcType=VARCHAR },
      </if>
      <if test="pageUrl != null">
        #{ pageUrl,jdbcType=VARCHAR },
      </if>
      <if test="actionType != null">
        #{ actionType,jdbcType=INTEGER },
      </if>
      <if test="ip != null">
        #{ ip,jdbcType=VARCHAR },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="historyRecord != null">
        #{ historyRecord,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into s_system_log 
    (
      platform,
      employee_id,
      employee_name,
      module_name,
      page_name,
      page_url,
      action_type,
      ip,
      remark,
      history_record,
      create_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.platform,jdbcType=INTEGER },
     #{ item.employeeId,jdbcType=VARCHAR },
     #{ item.employeeName,jdbcType=VARCHAR },
     #{ item.moduleName,jdbcType=VARCHAR },
     #{ item.pageName,jdbcType=VARCHAR },
     #{ item.pageUrl,jdbcType=VARCHAR },
     #{ item.actionType,jdbcType=INTEGER },
     #{ item.ip,jdbcType=VARCHAR },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.historyRecord,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.SystemLogExample" resultType="java.lang.Integer">
    select count(*) from s_system_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update s_system_log set 
	      platform = #{record.platform,jdbcType=INTEGER},
	      employee_id = #{record.employeeId,jdbcType=VARCHAR},
	      employee_name = #{record.employeeName,jdbcType=VARCHAR},
	      module_name = #{record.moduleName,jdbcType=VARCHAR},
	      page_name = #{record.pageName,jdbcType=VARCHAR},
	      page_url = #{record.pageUrl,jdbcType=VARCHAR},
	      action_type = #{record.actionType,jdbcType=INTEGER},
	      ip = #{record.ip,jdbcType=VARCHAR},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      history_record = #{record.historyRecord,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update s_system_log 
    <set> 
	      <if test="record.platform != null">
	        platform = #{record.platform,jdbcType=INTEGER},
	      </if>
	      <if test="record.employeeId != null">
	        employee_id = #{record.employeeId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.employeeName != null">
	        employee_name = #{record.employeeName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.moduleName != null">
	        module_name = #{record.moduleName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.pageName != null">
	        page_name = #{record.pageName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.pageUrl != null">
	        page_url = #{record.pageUrl,jdbcType=VARCHAR},
	      </if>
	      <if test="record.actionType != null">
	        action_type = #{record.actionType,jdbcType=INTEGER},
	      </if>
	      <if test="record.ip != null">
	        ip = #{record.ip,jdbcType=VARCHAR},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.historyRecord != null">
	        history_record = #{record.historyRecord,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.SystemLog">
    update s_system_log 
    <set> 
	      <if test="platform != null">
	        platform = #{platform,jdbcType=INTEGER},
	      </if>
	      <if test="employeeId != null">
	        employee_id = #{employeeId,jdbcType=VARCHAR},
	      </if>
	      <if test="employeeName != null">
	        employee_name = #{employeeName,jdbcType=VARCHAR},
	      </if>
	      <if test="moduleName != null">
	        module_name = #{moduleName,jdbcType=VARCHAR},
	      </if>
	      <if test="pageName != null">
	        page_name = #{pageName,jdbcType=VARCHAR},
	      </if>
	      <if test="pageUrl != null">
	        page_url = #{pageUrl,jdbcType=VARCHAR},
	      </if>
	      <if test="actionType != null">
	        action_type = #{actionType,jdbcType=INTEGER},
	      </if>
	      <if test="ip != null">
	        ip = #{ip,jdbcType=VARCHAR},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="historyRecord != null">
	        history_record = #{historyRecord,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.SystemLog">
    update s_system_log set
        platform = #{platform,jdbcType=INTEGER},
        employee_id = #{employeeId,jdbcType=VARCHAR},
        employee_name = #{employeeName,jdbcType=VARCHAR},
        module_name = #{moduleName,jdbcType=VARCHAR},
        page_name = #{pageName,jdbcType=VARCHAR},
        page_url = #{pageUrl,jdbcType=VARCHAR},
        action_type = #{actionType,jdbcType=INTEGER},
        ip = #{ip,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        history_record = #{historyRecord,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>