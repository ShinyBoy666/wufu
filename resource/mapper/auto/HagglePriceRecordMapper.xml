<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.HagglePriceRecordDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.HagglePriceRecord">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="haggle_id" jdbcType="INTEGER" property="haggleId" />
	   <result column="from_customer_id" jdbcType="INTEGER" property="fromCustomerId" />
	   <result column="current_price" jdbcType="DOUBLE" property="currentPrice" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    haggle_id,
    from_customer_id,
    current_price,
    order_id,
    update_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from m_haggle_price_record  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.HagglePriceRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  m_haggle_price_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.HagglePriceRecordExample">
     delete from  m_haggle_price_record where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.HagglePriceRecordExample">
    delete from  m_haggle_price_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.HagglePriceRecord" useGeneratedKeys="true" keyProperty="id">
    insert into m_haggle_price_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="haggleId != null">
        haggle_id,
      </if>
      <if test="fromCustomerId != null">
        from_customer_id,
      </if>
      <if test="currentPrice != null">
        current_price,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="haggleId != null">
        #{ haggleId,jdbcType=INTEGER },
      </if>
      <if test="fromCustomerId != null">
        #{ fromCustomerId,jdbcType=INTEGER },
      </if>
      <if test="currentPrice != null">
        #{ currentPrice,jdbcType=DOUBLE },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into m_haggle_price_record 
    (
      haggle_id,
      from_customer_id,
      current_price,
      order_id,
      update_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.haggleId,jdbcType=INTEGER },
     #{ item.fromCustomerId,jdbcType=INTEGER },
     #{ item.currentPrice,jdbcType=DOUBLE },
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.HagglePriceRecordExample" resultType="java.lang.Integer">
    select count(*) from m_haggle_price_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update m_haggle_price_record set 
	      haggle_id = #{record.haggleId,jdbcType=INTEGER},
	      from_customer_id = #{record.fromCustomerId,jdbcType=INTEGER},
	      current_price = #{record.currentPrice,jdbcType=DOUBLE},
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update m_haggle_price_record 
    <set> 
	      <if test="record.haggleId != null">
	        haggle_id = #{record.haggleId,jdbcType=INTEGER},
	      </if>
	      <if test="record.fromCustomerId != null">
	        from_customer_id = #{record.fromCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.currentPrice != null">
	        current_price = #{record.currentPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.HagglePriceRecord">
    update m_haggle_price_record 
    <set> 
	      <if test="haggleId != null">
	        haggle_id = #{haggleId,jdbcType=INTEGER},
	      </if>
	      <if test="fromCustomerId != null">
	        from_customer_id = #{fromCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="currentPrice != null">
	        current_price = #{currentPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.HagglePriceRecord">
    update m_haggle_price_record set
        haggle_id = #{haggleId,jdbcType=INTEGER},
        from_customer_id = #{fromCustomerId,jdbcType=INTEGER},
        current_price = #{currentPrice,jdbcType=DOUBLE},
        order_id = #{orderId,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>