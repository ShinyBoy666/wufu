<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.SmsDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.Sms">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="shop_id" jdbcType="VARCHAR" property="shopId" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="receive_phone" jdbcType="VARCHAR" property="receivePhone" />
	   <result column="sms_code" jdbcType="VARCHAR" property="smsCode" />
	   <result column="sms_content" jdbcType="VARCHAR" property="smsContent" />
	   <result column="from_type" jdbcType="INTEGER" property="fromType" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    shop_id,
    customer_id,
    receive_phone,
    sms_code,
    sms_content,
    from_type,
    state,
    create_time,
    create_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from s_sms  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.SmsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  s_sms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.SmsExample">
     delete from  s_sms where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.SmsExample">
    delete from  s_sms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.Sms" useGeneratedKeys="true" keyProperty="id">
    insert into s_sms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="receivePhone != null">
        receive_phone,
      </if>
      <if test="smsCode != null">
        sms_code,
      </if>
      <if test="smsContent != null">
        sms_content,
      </if>
      <if test="fromType != null">
        from_type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="shopId != null">
        #{ shopId,jdbcType=VARCHAR },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="receivePhone != null">
        #{ receivePhone,jdbcType=VARCHAR },
      </if>
      <if test="smsCode != null">
        #{ smsCode,jdbcType=VARCHAR },
      </if>
      <if test="smsContent != null">
        #{ smsContent,jdbcType=VARCHAR },
      </if>
      <if test="fromType != null">
        #{ fromType,jdbcType=INTEGER },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into s_sms 
    (
      shop_id,
      customer_id,
      receive_phone,
      sms_code,
      sms_content,
      from_type,
      state,
      create_time,
      create_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.shopId,jdbcType=VARCHAR },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.receivePhone,jdbcType=VARCHAR },
     #{ item.smsCode,jdbcType=VARCHAR },
     #{ item.smsContent,jdbcType=VARCHAR },
     #{ item.fromType,jdbcType=INTEGER },
     #{ item.state,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.SmsExample" resultType="java.lang.Integer">
    select count(*) from s_sms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update s_sms set 
	      shop_id = #{record.shopId,jdbcType=VARCHAR},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      receive_phone = #{record.receivePhone,jdbcType=VARCHAR},
	      sms_code = #{record.smsCode,jdbcType=VARCHAR},
	      sms_content = #{record.smsContent,jdbcType=VARCHAR},
	      from_type = #{record.fromType,jdbcType=INTEGER},
	      state = #{record.state,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update s_sms 
    <set> 
	      <if test="record.shopId != null">
	        shop_id = #{record.shopId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.receivePhone != null">
	        receive_phone = #{record.receivePhone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.smsCode != null">
	        sms_code = #{record.smsCode,jdbcType=VARCHAR},
	      </if>
	      <if test="record.smsContent != null">
	        sms_content = #{record.smsContent,jdbcType=VARCHAR},
	      </if>
	      <if test="record.fromType != null">
	        from_type = #{record.fromType,jdbcType=INTEGER},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Sms">
    update s_sms 
    <set> 
	      <if test="shopId != null">
	        shop_id = #{shopId,jdbcType=VARCHAR},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="receivePhone != null">
	        receive_phone = #{receivePhone,jdbcType=VARCHAR},
	      </if>
	      <if test="smsCode != null">
	        sms_code = #{smsCode,jdbcType=VARCHAR},
	      </if>
	      <if test="smsContent != null">
	        sms_content = #{smsContent,jdbcType=VARCHAR},
	      </if>
	      <if test="fromType != null">
	        from_type = #{fromType,jdbcType=INTEGER},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Sms">
    update s_sms set
        shop_id = #{shopId,jdbcType=VARCHAR},
        customer_id = #{customerId,jdbcType=INTEGER},
        receive_phone = #{receivePhone,jdbcType=VARCHAR},
        sms_code = #{smsCode,jdbcType=VARCHAR},
        sms_content = #{smsContent,jdbcType=VARCHAR},
        from_type = #{fromType,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>