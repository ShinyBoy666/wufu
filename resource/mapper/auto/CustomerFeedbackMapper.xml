<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CustomerFeedbackDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.CustomerFeedback">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="from_type" jdbcType="INTEGER" property="fromType" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
	   <result column="phone_type" jdbcType="VARCHAR" property="phoneType" />
	   <result column="imei" jdbcType="VARCHAR" property="imei" />
	   <result column="lng" jdbcType="DOUBLE" property="lng" />
	   <result column="lat" jdbcType="DOUBLE" property="lat" />
	   <result column="app_designed" jdbcType="INTEGER" property="appDesigned" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="app_veision" jdbcType="VARCHAR" property="appVeision" />
	   <result column="system_version" jdbcType="VARCHAR" property="systemVersion" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    from_type,
    customer_id,
    cellphone,
    phone_type,
    imei,
    lng,
    lat,
    app_designed,
    state,
    app_veision,
    system_version,
    create_time,
    create_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from c_customer_feedback  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerFeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  c_customer_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CustomerFeedbackExample">
     delete from  c_customer_feedback where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerFeedbackExample">
    delete from  c_customer_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.CustomerFeedback" useGeneratedKeys="true" keyProperty="id">
    insert into c_customer_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromType != null">
        from_type,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="phoneType != null">
        phone_type,
      </if>
      <if test="imei != null">
        imei,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="appDesigned != null">
        app_designed,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="appVeision != null">
        app_veision,
      </if>
      <if test="systemVersion != null">
        system_version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="fromType != null">
        #{ fromType,jdbcType=INTEGER },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="cellphone != null">
        #{ cellphone,jdbcType=VARCHAR },
      </if>
      <if test="phoneType != null">
        #{ phoneType,jdbcType=VARCHAR },
      </if>
      <if test="imei != null">
        #{ imei,jdbcType=VARCHAR },
      </if>
      <if test="lng != null">
        #{ lng,jdbcType=DOUBLE },
      </if>
      <if test="lat != null">
        #{ lat,jdbcType=DOUBLE },
      </if>
      <if test="appDesigned != null">
        #{ appDesigned,jdbcType=INTEGER },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="appVeision != null">
        #{ appVeision,jdbcType=VARCHAR },
      </if>
      <if test="systemVersion != null">
        #{ systemVersion,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into c_customer_feedback 
    (
      from_type,
      customer_id,
      cellphone,
      phone_type,
      imei,
      lng,
      lat,
      app_designed,
      state,
      app_veision,
      system_version,
      create_time,
      create_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.fromType,jdbcType=INTEGER },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.cellphone,jdbcType=VARCHAR },
     #{ item.phoneType,jdbcType=VARCHAR },
     #{ item.imei,jdbcType=VARCHAR },
     #{ item.lng,jdbcType=DOUBLE },
     #{ item.lat,jdbcType=DOUBLE },
     #{ item.appDesigned,jdbcType=INTEGER },
     #{ item.state,jdbcType=INTEGER },
     #{ item.appVeision,jdbcType=VARCHAR },
     #{ item.systemVersion,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerFeedbackExample" resultType="java.lang.Integer">
    select count(*) from c_customer_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update c_customer_feedback set 
	      from_type = #{record.fromType,jdbcType=INTEGER},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      phone_type = #{record.phoneType,jdbcType=VARCHAR},
	      imei = #{record.imei,jdbcType=VARCHAR},
	      lng = #{record.lng,jdbcType=DOUBLE},
	      lat = #{record.lat,jdbcType=DOUBLE},
	      app_designed = #{record.appDesigned,jdbcType=INTEGER},
	      state = #{record.state,jdbcType=INTEGER},
	      app_veision = #{record.appVeision,jdbcType=VARCHAR},
	      system_version = #{record.systemVersion,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update c_customer_feedback 
    <set> 
	      <if test="record.fromType != null">
	        from_type = #{record.fromType,jdbcType=INTEGER},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cellphone != null">
	        cellphone = #{record.cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.phoneType != null">
	        phone_type = #{record.phoneType,jdbcType=VARCHAR},
	      </if>
	      <if test="record.imei != null">
	        imei = #{record.imei,jdbcType=VARCHAR},
	      </if>
	      <if test="record.lng != null">
	        lng = #{record.lng,jdbcType=DOUBLE},
	      </if>
	      <if test="record.lat != null">
	        lat = #{record.lat,jdbcType=DOUBLE},
	      </if>
	      <if test="record.appDesigned != null">
	        app_designed = #{record.appDesigned,jdbcType=INTEGER},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.appVeision != null">
	        app_veision = #{record.appVeision,jdbcType=VARCHAR},
	      </if>
	      <if test="record.systemVersion != null">
	        system_version = #{record.systemVersion,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerFeedback">
    update c_customer_feedback 
    <set> 
	      <if test="fromType != null">
	        from_type = #{fromType,jdbcType=INTEGER},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="cellphone != null">
	        cellphone = #{cellphone,jdbcType=VARCHAR},
	      </if>
	      <if test="phoneType != null">
	        phone_type = #{phoneType,jdbcType=VARCHAR},
	      </if>
	      <if test="imei != null">
	        imei = #{imei,jdbcType=VARCHAR},
	      </if>
	      <if test="lng != null">
	        lng = #{lng,jdbcType=DOUBLE},
	      </if>
	      <if test="lat != null">
	        lat = #{lat,jdbcType=DOUBLE},
	      </if>
	      <if test="appDesigned != null">
	        app_designed = #{appDesigned,jdbcType=INTEGER},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="appVeision != null">
	        app_veision = #{appVeision,jdbcType=VARCHAR},
	      </if>
	      <if test="systemVersion != null">
	        system_version = #{systemVersion,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerFeedback">
    update c_customer_feedback set
        from_type = #{fromType,jdbcType=INTEGER},
        customer_id = #{customerId,jdbcType=INTEGER},
        cellphone = #{cellphone,jdbcType=VARCHAR},
        phone_type = #{phoneType,jdbcType=VARCHAR},
        imei = #{imei,jdbcType=VARCHAR},
        lng = #{lng,jdbcType=DOUBLE},
        lat = #{lat,jdbcType=DOUBLE},
        app_designed = #{appDesigned,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        app_veision = #{appVeision,jdbcType=VARCHAR},
        system_version = #{systemVersion,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>