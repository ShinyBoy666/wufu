<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.ProductInfoDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.ProductInfo">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="product_id" jdbcType="INTEGER" property="productId" />
	   <result column="shop_id" jdbcType="INTEGER" property="shopId" />
	   <result column="unit" jdbcType="VARCHAR" property="unit" />
	   <result column="product_name" jdbcType="VARCHAR" property="productName" />
	   <result column="meta_keywords" jdbcType="VARCHAR" property="metaKeywords" />
	   <result column="product_introduction" jdbcType="VARCHAR" property="productIntroduction" />
	   <result column="category_id" jdbcType="INTEGER" property="categoryId" />
	   <result column="market_price" jdbcType="DOUBLE" property="marketPrice" />
	   <result column="retail_price" jdbcType="DOUBLE" property="retailPrice" />
	   <result column="vip_price" jdbcType="DOUBLE" property="vipPrice" />
	   <result column="is_delivery" jdbcType="INTEGER" property="isDelivery" />
	   <result column="is_realyname" jdbcType="INTEGER" property="isRealyname" />
	   <result column="is_have_sku" jdbcType="INTEGER" property="isHaveSku" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="is_new" jdbcType="INTEGER" property="isNew" />
	   <result column="hot" jdbcType="INTEGER" property="hot" />
	   <result column="sort" jdbcType="INTEGER" property="sort" />
	   <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
	   <result column="view_count" jdbcType="INTEGER" property="viewCount" />
	   <result column="buy_virtual_count" jdbcType="INTEGER" property="buyVirtualCount" />
	   <result column="buy_count" jdbcType="INTEGER" property="buyCount" />
	   <result column="praise_count" jdbcType="INTEGER" property="praiseCount" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	   <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    product_id,
    shop_id,
    unit,
    product_name,
    meta_keywords,
    product_introduction,
    category_id,
    market_price,
    retail_price,
    vip_price,
    is_delivery,
    is_realyname,
    is_have_sku,
    state,
    is_new,
    hot,
    sort,
    image_url,
    view_count,
    buy_virtual_count,
    buy_count,
    praise_count,
    create_time,
    create_user,
    update_time,
    update_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from p_product_info  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.ProductInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  p_product_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.ProductInfoExample">
     delete from  p_product_info where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.ProductInfoExample">
    delete from  p_product_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.ProductInfo" useGeneratedKeys="true" keyProperty="id">
    insert into p_product_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="metaKeywords != null">
        meta_keywords,
      </if>
      <if test="productIntroduction != null">
        product_introduction,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
      <if test="isDelivery != null">
        is_delivery,
      </if>
      <if test="isRealyname != null">
        is_realyname,
      </if>
      <if test="isHaveSku != null">
        is_have_sku,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="buyVirtualCount != null">
        buy_virtual_count,
      </if>
      <if test="buyCount != null">
        buy_count,
      </if>
      <if test="praiseCount != null">
        praise_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="productId != null">
        #{ productId,jdbcType=INTEGER },
      </if>
      <if test="shopId != null">
        #{ shopId,jdbcType=INTEGER },
      </if>
      <if test="unit != null">
        #{ unit,jdbcType=VARCHAR },
      </if>
      <if test="productName != null">
        #{ productName,jdbcType=VARCHAR },
      </if>
      <if test="metaKeywords != null">
        #{ metaKeywords,jdbcType=VARCHAR },
      </if>
      <if test="productIntroduction != null">
        #{ productIntroduction,jdbcType=VARCHAR },
      </if>
      <if test="categoryId != null">
        #{ categoryId,jdbcType=INTEGER },
      </if>
      <if test="marketPrice != null">
        #{ marketPrice,jdbcType=DOUBLE },
      </if>
      <if test="retailPrice != null">
        #{ retailPrice,jdbcType=DOUBLE },
      </if>
      <if test="vipPrice != null">
        #{ vipPrice,jdbcType=DOUBLE },
      </if>
      <if test="isDelivery != null">
        #{ isDelivery,jdbcType=INTEGER },
      </if>
      <if test="isRealyname != null">
        #{ isRealyname,jdbcType=INTEGER },
      </if>
      <if test="isHaveSku != null">
        #{ isHaveSku,jdbcType=INTEGER },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="isNew != null">
        #{ isNew,jdbcType=INTEGER },
      </if>
      <if test="hot != null">
        #{ hot,jdbcType=INTEGER },
      </if>
      <if test="sort != null">
        #{ sort,jdbcType=INTEGER },
      </if>
      <if test="imageUrl != null">
        #{ imageUrl,jdbcType=VARCHAR },
      </if>
      <if test="viewCount != null">
        #{ viewCount,jdbcType=INTEGER },
      </if>
      <if test="buyVirtualCount != null">
        #{ buyVirtualCount,jdbcType=INTEGER },
      </if>
      <if test="buyCount != null">
        #{ buyCount,jdbcType=INTEGER },
      </if>
      <if test="praiseCount != null">
        #{ praiseCount,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
      <if test="updateUser != null">
        #{ updateUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into p_product_info 
    (
      product_id,
      shop_id,
      unit,
      product_name,
      meta_keywords,
      product_introduction,
      category_id,
      market_price,
      retail_price,
      vip_price,
      is_delivery,
      is_realyname,
      is_have_sku,
      state,
      is_new,
      hot,
      sort,
      image_url,
      view_count,
      buy_virtual_count,
      buy_count,
      praise_count,
      create_time,
      create_user,
      update_time,
      update_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.productId,jdbcType=INTEGER },
     #{ item.shopId,jdbcType=INTEGER },
     #{ item.unit,jdbcType=VARCHAR },
     #{ item.productName,jdbcType=VARCHAR },
     #{ item.metaKeywords,jdbcType=VARCHAR },
     #{ item.productIntroduction,jdbcType=VARCHAR },
     #{ item.categoryId,jdbcType=INTEGER },
     #{ item.marketPrice,jdbcType=DOUBLE },
     #{ item.retailPrice,jdbcType=DOUBLE },
     #{ item.vipPrice,jdbcType=DOUBLE },
     #{ item.isDelivery,jdbcType=INTEGER },
     #{ item.isRealyname,jdbcType=INTEGER },
     #{ item.isHaveSku,jdbcType=INTEGER },
     #{ item.state,jdbcType=INTEGER },
     #{ item.isNew,jdbcType=INTEGER },
     #{ item.hot,jdbcType=INTEGER },
     #{ item.sort,jdbcType=INTEGER },
     #{ item.imageUrl,jdbcType=VARCHAR },
     #{ item.viewCount,jdbcType=INTEGER },
     #{ item.buyVirtualCount,jdbcType=INTEGER },
     #{ item.buyCount,jdbcType=INTEGER },
     #{ item.praiseCount,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP },
     #{ item.updateUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.ProductInfoExample" resultType="java.lang.Integer">
    select count(*) from p_product_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update p_product_info set 
	      product_id = #{record.productId,jdbcType=INTEGER},
	      shop_id = #{record.shopId,jdbcType=INTEGER},
	      unit = #{record.unit,jdbcType=VARCHAR},
	      product_name = #{record.productName,jdbcType=VARCHAR},
	      meta_keywords = #{record.metaKeywords,jdbcType=VARCHAR},
	      product_introduction = #{record.productIntroduction,jdbcType=VARCHAR},
	      category_id = #{record.categoryId,jdbcType=INTEGER},
	      market_price = #{record.marketPrice,jdbcType=DOUBLE},
	      retail_price = #{record.retailPrice,jdbcType=DOUBLE},
	      vip_price = #{record.vipPrice,jdbcType=DOUBLE},
	      is_delivery = #{record.isDelivery,jdbcType=INTEGER},
	      is_realyname = #{record.isRealyname,jdbcType=INTEGER},
	      is_have_sku = #{record.isHaveSku,jdbcType=INTEGER},
	      state = #{record.state,jdbcType=INTEGER},
	      is_new = #{record.isNew,jdbcType=INTEGER},
	      hot = #{record.hot,jdbcType=INTEGER},
	      sort = #{record.sort,jdbcType=INTEGER},
	      image_url = #{record.imageUrl,jdbcType=VARCHAR},
	      view_count = #{record.viewCount,jdbcType=INTEGER},
	      buy_virtual_count = #{record.buyVirtualCount,jdbcType=INTEGER},
	      buy_count = #{record.buyCount,jdbcType=INTEGER},
	      praise_count = #{record.praiseCount,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update p_product_info 
    <set> 
	      <if test="record.productId != null">
	        product_id = #{record.productId,jdbcType=INTEGER},
	      </if>
	      <if test="record.shopId != null">
	        shop_id = #{record.shopId,jdbcType=INTEGER},
	      </if>
	      <if test="record.unit != null">
	        unit = #{record.unit,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productName != null">
	        product_name = #{record.productName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.metaKeywords != null">
	        meta_keywords = #{record.metaKeywords,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productIntroduction != null">
	        product_introduction = #{record.productIntroduction,jdbcType=VARCHAR},
	      </if>
	      <if test="record.categoryId != null">
	        category_id = #{record.categoryId,jdbcType=INTEGER},
	      </if>
	      <if test="record.marketPrice != null">
	        market_price = #{record.marketPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="record.retailPrice != null">
	        retail_price = #{record.retailPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="record.vipPrice != null">
	        vip_price = #{record.vipPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="record.isDelivery != null">
	        is_delivery = #{record.isDelivery,jdbcType=INTEGER},
	      </if>
	      <if test="record.isRealyname != null">
	        is_realyname = #{record.isRealyname,jdbcType=INTEGER},
	      </if>
	      <if test="record.isHaveSku != null">
	        is_have_sku = #{record.isHaveSku,jdbcType=INTEGER},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.isNew != null">
	        is_new = #{record.isNew,jdbcType=INTEGER},
	      </if>
	      <if test="record.hot != null">
	        hot = #{record.hot,jdbcType=INTEGER},
	      </if>
	      <if test="record.sort != null">
	        sort = #{record.sort,jdbcType=INTEGER},
	      </if>
	      <if test="record.imageUrl != null">
	        image_url = #{record.imageUrl,jdbcType=VARCHAR},
	      </if>
	      <if test="record.viewCount != null">
	        view_count = #{record.viewCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.buyVirtualCount != null">
	        buy_virtual_count = #{record.buyVirtualCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.buyCount != null">
	        buy_count = #{record.buyCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.praiseCount != null">
	        praise_count = #{record.praiseCount,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateUser != null">
	        update_user = #{record.updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.ProductInfo">
    update p_product_info 
    <set> 
	      <if test="productId != null">
	        product_id = #{productId,jdbcType=INTEGER},
	      </if>
	      <if test="shopId != null">
	        shop_id = #{shopId,jdbcType=INTEGER},
	      </if>
	      <if test="unit != null">
	        unit = #{unit,jdbcType=VARCHAR},
	      </if>
	      <if test="productName != null">
	        product_name = #{productName,jdbcType=VARCHAR},
	      </if>
	      <if test="metaKeywords != null">
	        meta_keywords = #{metaKeywords,jdbcType=VARCHAR},
	      </if>
	      <if test="productIntroduction != null">
	        product_introduction = #{productIntroduction,jdbcType=VARCHAR},
	      </if>
	      <if test="categoryId != null">
	        category_id = #{categoryId,jdbcType=INTEGER},
	      </if>
	      <if test="marketPrice != null">
	        market_price = #{marketPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="retailPrice != null">
	        retail_price = #{retailPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="vipPrice != null">
	        vip_price = #{vipPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="isDelivery != null">
	        is_delivery = #{isDelivery,jdbcType=INTEGER},
	      </if>
	      <if test="isRealyname != null">
	        is_realyname = #{isRealyname,jdbcType=INTEGER},
	      </if>
	      <if test="isHaveSku != null">
	        is_have_sku = #{isHaveSku,jdbcType=INTEGER},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="isNew != null">
	        is_new = #{isNew,jdbcType=INTEGER},
	      </if>
	      <if test="hot != null">
	        hot = #{hot,jdbcType=INTEGER},
	      </if>
	      <if test="sort != null">
	        sort = #{sort,jdbcType=INTEGER},
	      </if>
	      <if test="imageUrl != null">
	        image_url = #{imageUrl,jdbcType=VARCHAR},
	      </if>
	      <if test="viewCount != null">
	        view_count = #{viewCount,jdbcType=INTEGER},
	      </if>
	      <if test="buyVirtualCount != null">
	        buy_virtual_count = #{buyVirtualCount,jdbcType=INTEGER},
	      </if>
	      <if test="buyCount != null">
	        buy_count = #{buyCount,jdbcType=INTEGER},
	      </if>
	      <if test="praiseCount != null">
	        praise_count = #{praiseCount,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null">
	        update_user = #{updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.ProductInfo">
    update p_product_info set
        product_id = #{productId,jdbcType=INTEGER},
        shop_id = #{shopId,jdbcType=INTEGER},
        unit = #{unit,jdbcType=VARCHAR},
        product_name = #{productName,jdbcType=VARCHAR},
        meta_keywords = #{metaKeywords,jdbcType=VARCHAR},
        product_introduction = #{productIntroduction,jdbcType=VARCHAR},
        category_id = #{categoryId,jdbcType=INTEGER},
        market_price = #{marketPrice,jdbcType=DOUBLE},
        retail_price = #{retailPrice,jdbcType=DOUBLE},
        vip_price = #{vipPrice,jdbcType=DOUBLE},
        is_delivery = #{isDelivery,jdbcType=INTEGER},
        is_realyname = #{isRealyname,jdbcType=INTEGER},
        is_have_sku = #{isHaveSku,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        is_new = #{isNew,jdbcType=INTEGER},
        hot = #{hot,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        image_url = #{imageUrl,jdbcType=VARCHAR},
        view_count = #{viewCount,jdbcType=INTEGER},
        buy_virtual_count = #{buyVirtualCount,jdbcType=INTEGER},
        buy_count = #{buyCount,jdbcType=INTEGER},
        praise_count = #{praiseCount,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>