<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.OrderProductDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.OrderProduct">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="product_id" jdbcType="INTEGER" property="productId" />
	   <result column="product_price_id" jdbcType="INTEGER" property="productPriceId" />
	   <result column="sku" jdbcType="VARCHAR" property="sku" />
	   <result column="product_number" jdbcType="INTEGER" property="productNumber" />
	   <result column="profit_first" jdbcType="DOUBLE" property="profitFirst" />
	   <result column="profit_second" jdbcType="DOUBLE" property="profitSecond" />
	   <result column="profit_third" jdbcType="DOUBLE" property="profitThird" />
	   <result column="product_price" jdbcType="DOUBLE" property="productPrice" />
	   <result column="product_discount_money" jdbcType="DOUBLE" property="productDiscountMoney" />
	   <result column="product_pay_money" jdbcType="DOUBLE" property="productPayMoney" />
	   <result column="product_state" jdbcType="INTEGER" property="productState" />
	   <result column="is_delivery" jdbcType="INTEGER" property="isDelivery" />
	   <result column="is_comment" jdbcType="INTEGER" property="isComment" />
	   <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
	   <result column="activity_product_id" jdbcType="INTEGER" property="activityProductId" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	   <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    order_id,
    product_id,
    product_price_id,
    sku,
    product_number,
    profit_first,
    profit_second,
    profit_third,
    product_price,
    product_discount_money,
    product_pay_money,
    product_state,
    is_delivery,
    is_comment,
    delivery_time,
    activity_product_id,
    remark,
    create_time,
    create_user,
    update_time,
    update_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from o_order_product  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  o_order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductExample">
     delete from  o_order_product where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductExample">
    delete from  o_order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.OrderProduct" useGeneratedKeys="true" keyProperty="id">
    insert into o_order_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productPriceId != null">
        product_price_id,
      </if>
      <if test="sku != null">
        sku,
      </if>
      <if test="productNumber != null">
        product_number,
      </if>
      <if test="profitFirst != null">
        profit_first,
      </if>
      <if test="profitSecond != null">
        profit_second,
      </if>
      <if test="profitThird != null">
        profit_third,
      </if>
      <if test="productPrice != null">
        product_price,
      </if>
      <if test="productDiscountMoney != null">
        product_discount_money,
      </if>
      <if test="productPayMoney != null">
        product_pay_money,
      </if>
      <if test="productState != null">
        product_state,
      </if>
      <if test="isDelivery != null">
        is_delivery,
      </if>
      <if test="isComment != null">
        is_comment,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="activityProductId != null">
        activity_product_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="productId != null">
        #{ productId,jdbcType=INTEGER },
      </if>
      <if test="productPriceId != null">
        #{ productPriceId,jdbcType=INTEGER },
      </if>
      <if test="sku != null">
        #{ sku,jdbcType=VARCHAR },
      </if>
      <if test="productNumber != null">
        #{ productNumber,jdbcType=INTEGER },
      </if>
      <if test="profitFirst != null">
        #{ profitFirst,jdbcType=DOUBLE },
      </if>
      <if test="profitSecond != null">
        #{ profitSecond,jdbcType=DOUBLE },
      </if>
      <if test="profitThird != null">
        #{ profitThird,jdbcType=DOUBLE },
      </if>
      <if test="productPrice != null">
        #{ productPrice,jdbcType=DOUBLE },
      </if>
      <if test="productDiscountMoney != null">
        #{ productDiscountMoney,jdbcType=DOUBLE },
      </if>
      <if test="productPayMoney != null">
        #{ productPayMoney,jdbcType=DOUBLE },
      </if>
      <if test="productState != null">
        #{ productState,jdbcType=INTEGER },
      </if>
      <if test="isDelivery != null">
        #{ isDelivery,jdbcType=INTEGER },
      </if>
      <if test="isComment != null">
        #{ isComment,jdbcType=INTEGER },
      </if>
      <if test="deliveryTime != null">
        #{ deliveryTime,jdbcType=TIMESTAMP },
      </if>
      <if test="activityProductId != null">
        #{ activityProductId,jdbcType=INTEGER },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
      <if test="updateUser != null">
        #{ updateUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into o_order_product 
    (
      order_id,
      product_id,
      product_price_id,
      sku,
      product_number,
      profit_first,
      profit_second,
      profit_third,
      product_price,
      product_discount_money,
      product_pay_money,
      product_state,
      is_delivery,
      is_comment,
      delivery_time,
      activity_product_id,
      remark,
      create_time,
      create_user,
      update_time,
      update_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.productId,jdbcType=INTEGER },
     #{ item.productPriceId,jdbcType=INTEGER },
     #{ item.sku,jdbcType=VARCHAR },
     #{ item.productNumber,jdbcType=INTEGER },
     #{ item.profitFirst,jdbcType=DOUBLE },
     #{ item.profitSecond,jdbcType=DOUBLE },
     #{ item.profitThird,jdbcType=DOUBLE },
     #{ item.productPrice,jdbcType=DOUBLE },
     #{ item.productDiscountMoney,jdbcType=DOUBLE },
     #{ item.productPayMoney,jdbcType=DOUBLE },
     #{ item.productState,jdbcType=INTEGER },
     #{ item.isDelivery,jdbcType=INTEGER },
     #{ item.isComment,jdbcType=INTEGER },
     #{ item.deliveryTime,jdbcType=TIMESTAMP },
     #{ item.activityProductId,jdbcType=INTEGER },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP },
     #{ item.updateUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductExample" resultType="java.lang.Integer">
    select count(*) from o_order_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update o_order_product set 
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      product_id = #{record.productId,jdbcType=INTEGER},
	      product_price_id = #{record.productPriceId,jdbcType=INTEGER},
	      sku = #{record.sku,jdbcType=VARCHAR},
	      product_number = #{record.productNumber,jdbcType=INTEGER},
	      profit_first = #{record.profitFirst,jdbcType=DOUBLE},
	      profit_second = #{record.profitSecond,jdbcType=DOUBLE},
	      profit_third = #{record.profitThird,jdbcType=DOUBLE},
	      product_price = #{record.productPrice,jdbcType=DOUBLE},
	      product_discount_money = #{record.productDiscountMoney,jdbcType=DOUBLE},
	      product_pay_money = #{record.productPayMoney,jdbcType=DOUBLE},
	      product_state = #{record.productState,jdbcType=INTEGER},
	      is_delivery = #{record.isDelivery,jdbcType=INTEGER},
	      is_comment = #{record.isComment,jdbcType=INTEGER},
	      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
	      activity_product_id = #{record.activityProductId,jdbcType=INTEGER},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update o_order_product 
    <set> 
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productId != null">
	        product_id = #{record.productId,jdbcType=INTEGER},
	      </if>
	      <if test="record.productPriceId != null">
	        product_price_id = #{record.productPriceId,jdbcType=INTEGER},
	      </if>
	      <if test="record.sku != null">
	        sku = #{record.sku,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productNumber != null">
	        product_number = #{record.productNumber,jdbcType=INTEGER},
	      </if>
	      <if test="record.profitFirst != null">
	        profit_first = #{record.profitFirst,jdbcType=DOUBLE},
	      </if>
	      <if test="record.profitSecond != null">
	        profit_second = #{record.profitSecond,jdbcType=DOUBLE},
	      </if>
	      <if test="record.profitThird != null">
	        profit_third = #{record.profitThird,jdbcType=DOUBLE},
	      </if>
	      <if test="record.productPrice != null">
	        product_price = #{record.productPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="record.productDiscountMoney != null">
	        product_discount_money = #{record.productDiscountMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="record.productPayMoney != null">
	        product_pay_money = #{record.productPayMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="record.productState != null">
	        product_state = #{record.productState,jdbcType=INTEGER},
	      </if>
	      <if test="record.isDelivery != null">
	        is_delivery = #{record.isDelivery,jdbcType=INTEGER},
	      </if>
	      <if test="record.isComment != null">
	        is_comment = #{record.isComment,jdbcType=INTEGER},
	      </if>
	      <if test="record.deliveryTime != null">
	        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.activityProductId != null">
	        activity_product_id = #{record.activityProductId,jdbcType=INTEGER},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateUser != null">
	        update_user = #{record.updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderProduct">
    update o_order_product 
    <set> 
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="productId != null">
	        product_id = #{productId,jdbcType=INTEGER},
	      </if>
	      <if test="productPriceId != null">
	        product_price_id = #{productPriceId,jdbcType=INTEGER},
	      </if>
	      <if test="sku != null">
	        sku = #{sku,jdbcType=VARCHAR},
	      </if>
	      <if test="productNumber != null">
	        product_number = #{productNumber,jdbcType=INTEGER},
	      </if>
	      <if test="profitFirst != null">
	        profit_first = #{profitFirst,jdbcType=DOUBLE},
	      </if>
	      <if test="profitSecond != null">
	        profit_second = #{profitSecond,jdbcType=DOUBLE},
	      </if>
	      <if test="profitThird != null">
	        profit_third = #{profitThird,jdbcType=DOUBLE},
	      </if>
	      <if test="productPrice != null">
	        product_price = #{productPrice,jdbcType=DOUBLE},
	      </if>
	      <if test="productDiscountMoney != null">
	        product_discount_money = #{productDiscountMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="productPayMoney != null">
	        product_pay_money = #{productPayMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="productState != null">
	        product_state = #{productState,jdbcType=INTEGER},
	      </if>
	      <if test="isDelivery != null">
	        is_delivery = #{isDelivery,jdbcType=INTEGER},
	      </if>
	      <if test="isComment != null">
	        is_comment = #{isComment,jdbcType=INTEGER},
	      </if>
	      <if test="deliveryTime != null">
	        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="activityProductId != null">
	        activity_product_id = #{activityProductId,jdbcType=INTEGER},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null">
	        update_user = #{updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderProduct">
    update o_order_product set
        order_id = #{orderId,jdbcType=VARCHAR},
        product_id = #{productId,jdbcType=INTEGER},
        product_price_id = #{productPriceId,jdbcType=INTEGER},
        sku = #{sku,jdbcType=VARCHAR},
        product_number = #{productNumber,jdbcType=INTEGER},
        profit_first = #{profitFirst,jdbcType=DOUBLE},
        profit_second = #{profitSecond,jdbcType=DOUBLE},
        profit_third = #{profitThird,jdbcType=DOUBLE},
        product_price = #{productPrice,jdbcType=DOUBLE},
        product_discount_money = #{productDiscountMoney,jdbcType=DOUBLE},
        product_pay_money = #{productPayMoney,jdbcType=DOUBLE},
        product_state = #{productState,jdbcType=INTEGER},
        is_delivery = #{isDelivery,jdbcType=INTEGER},
        is_comment = #{isComment,jdbcType=INTEGER},
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
        activity_product_id = #{activityProductId,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>