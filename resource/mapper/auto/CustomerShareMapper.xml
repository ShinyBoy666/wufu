<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CustomerShareDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.CustomerShare">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="share_partal" jdbcType="INTEGER" property="sharePartal" />
	   <result column="object_type" jdbcType="INTEGER" property="objectType" />
	   <result column="object_id" jdbcType="VARCHAR" property="objectId" />
	   <result column="is_reback" jdbcType="INTEGER" property="isReback" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    customer_id,
    share_partal,
    object_type,
    object_id,
    is_reback,
    create_time,
    create_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from c_customer_share  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerShareExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  c_customer_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CustomerShareExample">
     delete from  c_customer_share where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerShareExample">
    delete from  c_customer_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.CustomerShare" useGeneratedKeys="true" keyProperty="id">
    insert into c_customer_share
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="sharePartal != null">
        share_partal,
      </if>
      <if test="objectType != null">
        object_type,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="isReback != null">
        is_reback,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="sharePartal != null">
        #{ sharePartal,jdbcType=INTEGER },
      </if>
      <if test="objectType != null">
        #{ objectType,jdbcType=INTEGER },
      </if>
      <if test="objectId != null">
        #{ objectId,jdbcType=VARCHAR },
      </if>
      <if test="isReback != null">
        #{ isReback,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into c_customer_share 
    (
      customer_id,
      share_partal,
      object_type,
      object_id,
      is_reback,
      create_time,
      create_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.sharePartal,jdbcType=INTEGER },
     #{ item.objectType,jdbcType=INTEGER },
     #{ item.objectId,jdbcType=VARCHAR },
     #{ item.isReback,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerShareExample" resultType="java.lang.Integer">
    select count(*) from c_customer_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update c_customer_share set 
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      share_partal = #{record.sharePartal,jdbcType=INTEGER},
	      object_type = #{record.objectType,jdbcType=INTEGER},
	      object_id = #{record.objectId,jdbcType=VARCHAR},
	      is_reback = #{record.isReback,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update c_customer_share 
    <set> 
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.sharePartal != null">
	        share_partal = #{record.sharePartal,jdbcType=INTEGER},
	      </if>
	      <if test="record.objectType != null">
	        object_type = #{record.objectType,jdbcType=INTEGER},
	      </if>
	      <if test="record.objectId != null">
	        object_id = #{record.objectId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.isReback != null">
	        is_reback = #{record.isReback,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerShare">
    update c_customer_share 
    <set> 
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="sharePartal != null">
	        share_partal = #{sharePartal,jdbcType=INTEGER},
	      </if>
	      <if test="objectType != null">
	        object_type = #{objectType,jdbcType=INTEGER},
	      </if>
	      <if test="objectId != null">
	        object_id = #{objectId,jdbcType=VARCHAR},
	      </if>
	      <if test="isReback != null">
	        is_reback = #{isReback,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerShare">
    update c_customer_share set
        customer_id = #{customerId,jdbcType=INTEGER},
        share_partal = #{sharePartal,jdbcType=INTEGER},
        object_type = #{objectType,jdbcType=INTEGER},
        object_id = #{objectId,jdbcType=VARCHAR},
        is_reback = #{isReback,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>