<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.OrderProductProfitDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.OrderProductProfit">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="order_product_id" jdbcType="INTEGER" property="orderProductId" />
	   <result column="product_number" jdbcType="INTEGER" property="productNumber" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="customer_award" jdbcType="DOUBLE" property="customerAward" />
	   <result column="account_type" jdbcType="INTEGER" property="accountType" />
	   <result column="profit_level" jdbcType="INTEGER" property="profitLevel" />
	   <result column="handle_state" jdbcType="INTEGER" property="handleState" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="profit_time" jdbcType="TIMESTAMP" property="profitTime" />
	   <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	   <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    order_id,
    order_product_id,
    product_number,
    customer_id,
    customer_award,
    account_type,
    profit_level,
    handle_state,
    create_time,
    profit_time,
    cancel_time,
    create_user,
    update_time,
    update_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from o_order_product_profit  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductProfitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  o_order_product_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductProfitExample">
     delete from  o_order_product_profit where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductProfitExample">
    delete from  o_order_product_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.OrderProductProfit" useGeneratedKeys="true" keyProperty="id">
    insert into o_order_product_profit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderProductId != null">
        order_product_id,
      </if>
      <if test="productNumber != null">
        product_number,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerAward != null">
        customer_award,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="profitLevel != null">
        profit_level,
      </if>
      <if test="handleState != null">
        handle_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="profitTime != null">
        profit_time,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="orderProductId != null">
        #{ orderProductId,jdbcType=INTEGER },
      </if>
      <if test="productNumber != null">
        #{ productNumber,jdbcType=INTEGER },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="customerAward != null">
        #{ customerAward,jdbcType=DOUBLE },
      </if>
      <if test="accountType != null">
        #{ accountType,jdbcType=INTEGER },
      </if>
      <if test="profitLevel != null">
        #{ profitLevel,jdbcType=INTEGER },
      </if>
      <if test="handleState != null">
        #{ handleState,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="profitTime != null">
        #{ profitTime,jdbcType=TIMESTAMP },
      </if>
      <if test="cancelTime != null">
        #{ cancelTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
      <if test="updateUser != null">
        #{ updateUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into o_order_product_profit 
    (
      order_id,
      order_product_id,
      product_number,
      customer_id,
      customer_award,
      account_type,
      profit_level,
      handle_state,
      create_time,
      profit_time,
      cancel_time,
      create_user,
      update_time,
      update_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.orderProductId,jdbcType=INTEGER },
     #{ item.productNumber,jdbcType=INTEGER },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.customerAward,jdbcType=DOUBLE },
     #{ item.accountType,jdbcType=INTEGER },
     #{ item.profitLevel,jdbcType=INTEGER },
     #{ item.handleState,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.profitTime,jdbcType=TIMESTAMP },
     #{ item.cancelTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP },
     #{ item.updateUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderProductProfitExample" resultType="java.lang.Integer">
    select count(*) from o_order_product_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update o_order_product_profit set 
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      order_product_id = #{record.orderProductId,jdbcType=INTEGER},
	      product_number = #{record.productNumber,jdbcType=INTEGER},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      customer_award = #{record.customerAward,jdbcType=DOUBLE},
	      account_type = #{record.accountType,jdbcType=INTEGER},
	      profit_level = #{record.profitLevel,jdbcType=INTEGER},
	      handle_state = #{record.handleState,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      profit_time = #{record.profitTime,jdbcType=TIMESTAMP},
	      cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update o_order_product_profit 
    <set> 
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.orderProductId != null">
	        order_product_id = #{record.orderProductId,jdbcType=INTEGER},
	      </if>
	      <if test="record.productNumber != null">
	        product_number = #{record.productNumber,jdbcType=INTEGER},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.customerAward != null">
	        customer_award = #{record.customerAward,jdbcType=DOUBLE},
	      </if>
	      <if test="record.accountType != null">
	        account_type = #{record.accountType,jdbcType=INTEGER},
	      </if>
	      <if test="record.profitLevel != null">
	        profit_level = #{record.profitLevel,jdbcType=INTEGER},
	      </if>
	      <if test="record.handleState != null">
	        handle_state = #{record.handleState,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.profitTime != null">
	        profit_time = #{record.profitTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.cancelTime != null">
	        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateUser != null">
	        update_user = #{record.updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderProductProfit">
    update o_order_product_profit 
    <set> 
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="orderProductId != null">
	        order_product_id = #{orderProductId,jdbcType=INTEGER},
	      </if>
	      <if test="productNumber != null">
	        product_number = #{productNumber,jdbcType=INTEGER},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="customerAward != null">
	        customer_award = #{customerAward,jdbcType=DOUBLE},
	      </if>
	      <if test="accountType != null">
	        account_type = #{accountType,jdbcType=INTEGER},
	      </if>
	      <if test="profitLevel != null">
	        profit_level = #{profitLevel,jdbcType=INTEGER},
	      </if>
	      <if test="handleState != null">
	        handle_state = #{handleState,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="profitTime != null">
	        profit_time = #{profitTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="cancelTime != null">
	        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null">
	        update_user = #{updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderProductProfit">
    update o_order_product_profit set
        order_id = #{orderId,jdbcType=VARCHAR},
        order_product_id = #{orderProductId,jdbcType=INTEGER},
        product_number = #{productNumber,jdbcType=INTEGER},
        customer_id = #{customerId,jdbcType=INTEGER},
        customer_award = #{customerAward,jdbcType=DOUBLE},
        account_type = #{accountType,jdbcType=INTEGER},
        profit_level = #{profitLevel,jdbcType=INTEGER},
        handle_state = #{handleState,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        profit_time = #{profitTime,jdbcType=TIMESTAMP},
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>