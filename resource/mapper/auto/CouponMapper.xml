<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CouponDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.Coupon">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="shop_id" jdbcType="INTEGER" property="shopId" />
	   <result column="coupon_type" jdbcType="INTEGER" property="couponType" />
	   <result column="coupon_apply_id" jdbcType="INTEGER" property="couponApplyId" />
	   <result column="coupon_code" jdbcType="VARCHAR" property="couponCode" />
	   <result column="coupon_money" jdbcType="DOUBLE" property="couponMoney" />
	   <result column="order_money" jdbcType="DOUBLE" property="orderMoney" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
	   <result column="use_time" jdbcType="TIMESTAMP" property="useTime" />
	   <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
	   <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    shop_id,
    coupon_type,
    coupon_apply_id,
    coupon_code,
    coupon_money,
    order_money,
    customer_id,
    add_time,
    use_time,
    begin_time,
    end_time,
    state,
    create_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from m_coupon  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  m_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CouponExample">
     delete from  m_coupon where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CouponExample">
    delete from  m_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.Coupon" useGeneratedKeys="true" keyProperty="id">
    insert into m_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="couponType != null">
        coupon_type,
      </if>
      <if test="couponApplyId != null">
        coupon_apply_id,
      </if>
      <if test="couponCode != null">
        coupon_code,
      </if>
      <if test="couponMoney != null">
        coupon_money,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="shopId != null">
        #{ shopId,jdbcType=INTEGER },
      </if>
      <if test="couponType != null">
        #{ couponType,jdbcType=INTEGER },
      </if>
      <if test="couponApplyId != null">
        #{ couponApplyId,jdbcType=INTEGER },
      </if>
      <if test="couponCode != null">
        #{ couponCode,jdbcType=VARCHAR },
      </if>
      <if test="couponMoney != null">
        #{ couponMoney,jdbcType=DOUBLE },
      </if>
      <if test="orderMoney != null">
        #{ orderMoney,jdbcType=DOUBLE },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="addTime != null">
        #{ addTime,jdbcType=TIMESTAMP },
      </if>
      <if test="useTime != null">
        #{ useTime,jdbcType=TIMESTAMP },
      </if>
      <if test="beginTime != null">
        #{ beginTime,jdbcType=TIMESTAMP },
      </if>
      <if test="endTime != null">
        #{ endTime,jdbcType=TIMESTAMP },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into m_coupon 
    (
      shop_id,
      coupon_type,
      coupon_apply_id,
      coupon_code,
      coupon_money,
      order_money,
      customer_id,
      add_time,
      use_time,
      begin_time,
      end_time,
      state,
      create_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.shopId,jdbcType=INTEGER },
     #{ item.couponType,jdbcType=INTEGER },
     #{ item.couponApplyId,jdbcType=INTEGER },
     #{ item.couponCode,jdbcType=VARCHAR },
     #{ item.couponMoney,jdbcType=DOUBLE },
     #{ item.orderMoney,jdbcType=DOUBLE },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.addTime,jdbcType=TIMESTAMP },
     #{ item.useTime,jdbcType=TIMESTAMP },
     #{ item.beginTime,jdbcType=TIMESTAMP },
     #{ item.endTime,jdbcType=TIMESTAMP },
     #{ item.state,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CouponExample" resultType="java.lang.Integer">
    select count(*) from m_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update m_coupon set 
	      shop_id = #{record.shopId,jdbcType=INTEGER},
	      coupon_type = #{record.couponType,jdbcType=INTEGER},
	      coupon_apply_id = #{record.couponApplyId,jdbcType=INTEGER},
	      coupon_code = #{record.couponCode,jdbcType=VARCHAR},
	      coupon_money = #{record.couponMoney,jdbcType=DOUBLE},
	      order_money = #{record.orderMoney,jdbcType=DOUBLE},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      add_time = #{record.addTime,jdbcType=TIMESTAMP},
	      use_time = #{record.useTime,jdbcType=TIMESTAMP},
	      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
	      end_time = #{record.endTime,jdbcType=TIMESTAMP},
	      state = #{record.state,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update m_coupon 
    <set> 
	      <if test="record.shopId != null">
	        shop_id = #{record.shopId,jdbcType=INTEGER},
	      </if>
	      <if test="record.couponType != null">
	        coupon_type = #{record.couponType,jdbcType=INTEGER},
	      </if>
	      <if test="record.couponApplyId != null">
	        coupon_apply_id = #{record.couponApplyId,jdbcType=INTEGER},
	      </if>
	      <if test="record.couponCode != null">
	        coupon_code = #{record.couponCode,jdbcType=VARCHAR},
	      </if>
	      <if test="record.couponMoney != null">
	        coupon_money = #{record.couponMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="record.orderMoney != null">
	        order_money = #{record.orderMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.addTime != null">
	        add_time = #{record.addTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.useTime != null">
	        use_time = #{record.useTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.beginTime != null">
	        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.endTime != null">
	        end_time = #{record.endTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Coupon">
    update m_coupon 
    <set> 
	      <if test="shopId != null">
	        shop_id = #{shopId,jdbcType=INTEGER},
	      </if>
	      <if test="couponType != null">
	        coupon_type = #{couponType,jdbcType=INTEGER},
	      </if>
	      <if test="couponApplyId != null">
	        coupon_apply_id = #{couponApplyId,jdbcType=INTEGER},
	      </if>
	      <if test="couponCode != null">
	        coupon_code = #{couponCode,jdbcType=VARCHAR},
	      </if>
	      <if test="couponMoney != null">
	        coupon_money = #{couponMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="orderMoney != null">
	        order_money = #{orderMoney,jdbcType=DOUBLE},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="addTime != null">
	        add_time = #{addTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="useTime != null">
	        use_time = #{useTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="beginTime != null">
	        begin_time = #{beginTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="endTime != null">
	        end_time = #{endTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.Coupon">
    update m_coupon set
        shop_id = #{shopId,jdbcType=INTEGER},
        coupon_type = #{couponType,jdbcType=INTEGER},
        coupon_apply_id = #{couponApplyId,jdbcType=INTEGER},
        coupon_code = #{couponCode,jdbcType=VARCHAR},
        coupon_money = #{couponMoney,jdbcType=DOUBLE},
        order_money = #{orderMoney,jdbcType=DOUBLE},
        customer_id = #{customerId,jdbcType=INTEGER},
        add_time = #{addTime,jdbcType=TIMESTAMP},
        use_time = #{useTime,jdbcType=TIMESTAMP},
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>