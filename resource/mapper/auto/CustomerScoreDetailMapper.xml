<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.CustomerScoreDetailDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.CustomerScoreDetail">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
	   <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
	   <result column="consum_type" jdbcType="INTEGER" property="consumType" />
	   <result column="old_score" jdbcType="INTEGER" property="oldScore" />
	   <result column="score" jdbcType="INTEGER" property="score" />
	   <result column="now_score" jdbcType="INTEGER" property="nowScore" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    order_id,
    customer_id,
    customer_name,
    payment_type,
    consum_type,
    old_score,
    score,
    now_score,
    remark,
    create_time,
    create_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from c_customer_score_detail  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerScoreDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  c_customer_score_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.CustomerScoreDetailExample">
     delete from  c_customer_score_detail where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerScoreDetailExample">
    delete from  c_customer_score_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.CustomerScoreDetail" useGeneratedKeys="true" keyProperty="id">
    insert into c_customer_score_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="consumType != null">
        consum_type,
      </if>
      <if test="oldScore != null">
        old_score,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="nowScore != null">
        now_score,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="customerName != null">
        #{ customerName,jdbcType=VARCHAR },
      </if>
      <if test="paymentType != null">
        #{ paymentType,jdbcType=INTEGER },
      </if>
      <if test="consumType != null">
        #{ consumType,jdbcType=INTEGER },
      </if>
      <if test="oldScore != null">
        #{ oldScore,jdbcType=INTEGER },
      </if>
      <if test="score != null">
        #{ score,jdbcType=INTEGER },
      </if>
      <if test="nowScore != null">
        #{ nowScore,jdbcType=INTEGER },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into c_customer_score_detail 
    (
      order_id,
      customer_id,
      customer_name,
      payment_type,
      consum_type,
      old_score,
      score,
      now_score,
      remark,
      create_time,
      create_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.customerName,jdbcType=VARCHAR },
     #{ item.paymentType,jdbcType=INTEGER },
     #{ item.consumType,jdbcType=INTEGER },
     #{ item.oldScore,jdbcType=INTEGER },
     #{ item.score,jdbcType=INTEGER },
     #{ item.nowScore,jdbcType=INTEGER },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.CustomerScoreDetailExample" resultType="java.lang.Integer">
    select count(*) from c_customer_score_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update c_customer_score_detail set 
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      customer_name = #{record.customerName,jdbcType=VARCHAR},
	      payment_type = #{record.paymentType,jdbcType=INTEGER},
	      consum_type = #{record.consumType,jdbcType=INTEGER},
	      old_score = #{record.oldScore,jdbcType=INTEGER},
	      score = #{record.score,jdbcType=INTEGER},
	      now_score = #{record.nowScore,jdbcType=INTEGER},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update c_customer_score_detail 
    <set> 
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.customerName != null">
	        customer_name = #{record.customerName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.paymentType != null">
	        payment_type = #{record.paymentType,jdbcType=INTEGER},
	      </if>
	      <if test="record.consumType != null">
	        consum_type = #{record.consumType,jdbcType=INTEGER},
	      </if>
	      <if test="record.oldScore != null">
	        old_score = #{record.oldScore,jdbcType=INTEGER},
	      </if>
	      <if test="record.score != null">
	        score = #{record.score,jdbcType=INTEGER},
	      </if>
	      <if test="record.nowScore != null">
	        now_score = #{record.nowScore,jdbcType=INTEGER},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerScoreDetail">
    update c_customer_score_detail 
    <set> 
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="customerName != null">
	        customer_name = #{customerName,jdbcType=VARCHAR},
	      </if>
	      <if test="paymentType != null">
	        payment_type = #{paymentType,jdbcType=INTEGER},
	      </if>
	      <if test="consumType != null">
	        consum_type = #{consumType,jdbcType=INTEGER},
	      </if>
	      <if test="oldScore != null">
	        old_score = #{oldScore,jdbcType=INTEGER},
	      </if>
	      <if test="score != null">
	        score = #{score,jdbcType=INTEGER},
	      </if>
	      <if test="nowScore != null">
	        now_score = #{nowScore,jdbcType=INTEGER},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.CustomerScoreDetail">
    update c_customer_score_detail set
        order_id = #{orderId,jdbcType=VARCHAR},
        customer_id = #{customerId,jdbcType=INTEGER},
        customer_name = #{customerName,jdbcType=VARCHAR},
        payment_type = #{paymentType,jdbcType=INTEGER},
        consum_type = #{consumType,jdbcType=INTEGER},
        old_score = #{oldScore,jdbcType=INTEGER},
        score = #{score,jdbcType=INTEGER},
        now_score = #{nowScore,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>