<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.GroupBuyOrderDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.GroupBuyOrder">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="shop_id" jdbcType="INTEGER" property="shopId" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="activity_id" jdbcType="INTEGER" property="activityId" />
	   <result column="origin_customer_id" jdbcType="INTEGER" property="originCustomerId" />
	   <result column="customer_id" jdbcType="INTEGER" property="customerId" />
	   <result column="recipient_name" jdbcType="VARCHAR" property="recipientName" />
	   <result column="recipient_phone" jdbcType="VARCHAR" property="recipientPhone" />
	   <result column="recipient_address" jdbcType="VARCHAR" property="recipientAddress" />
	   <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
	   <result column="province_id" jdbcType="INTEGER" property="provinceId" />
	   <result column="city_id" jdbcType="INTEGER" property="cityId" />
	   <result column="district_id" jdbcType="INTEGER" property="districtId" />
	   <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
	   <result column="account_payment" jdbcType="DOUBLE" property="accountPayment" />
	   <result column="online_payment" jdbcType="DOUBLE" property="onlinePayment" />
	   <result column="online_pay_type" jdbcType="INTEGER" property="onlinePayType" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="order_state" jdbcType="INTEGER" property="orderState" />
	   <result column="pay_state" jdbcType="INTEGER" property="payState" />
	   <result column="order_from" jdbcType="INTEGER" property="orderFrom" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	   <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    shop_id,
    order_id,
    activity_id,
    origin_customer_id,
    customer_id,
    recipient_name,
    recipient_phone,
    recipient_address,
    zip_code,
    province_id,
    city_id,
    district_id,
    total_amount,
    account_payment,
    online_payment,
    online_pay_type,
    remark,
    order_state,
    pay_state,
    order_from,
    create_time,
    create_user,
    update_time,
    update_user
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from m_group_buy_order  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.GroupBuyOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  m_group_buy_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.GroupBuyOrderExample">
     delete from  m_group_buy_order where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.GroupBuyOrderExample">
    delete from  m_group_buy_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.GroupBuyOrder" useGeneratedKeys="true" keyProperty="id">
    insert into m_group_buy_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="originCustomerId != null">
        origin_customer_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="recipientName != null">
        recipient_name,
      </if>
      <if test="recipientPhone != null">
        recipient_phone,
      </if>
      <if test="recipientAddress != null">
        recipient_address,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="accountPayment != null">
        account_payment,
      </if>
      <if test="onlinePayment != null">
        online_payment,
      </if>
      <if test="onlinePayType != null">
        online_pay_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
      <if test="payState != null">
        pay_state,
      </if>
      <if test="orderFrom != null">
        order_from,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="shopId != null">
        #{ shopId,jdbcType=INTEGER },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="activityId != null">
        #{ activityId,jdbcType=INTEGER },
      </if>
      <if test="originCustomerId != null">
        #{ originCustomerId,jdbcType=INTEGER },
      </if>
      <if test="customerId != null">
        #{ customerId,jdbcType=INTEGER },
      </if>
      <if test="recipientName != null">
        #{ recipientName,jdbcType=VARCHAR },
      </if>
      <if test="recipientPhone != null">
        #{ recipientPhone,jdbcType=VARCHAR },
      </if>
      <if test="recipientAddress != null">
        #{ recipientAddress,jdbcType=VARCHAR },
      </if>
      <if test="zipCode != null">
        #{ zipCode,jdbcType=VARCHAR },
      </if>
      <if test="provinceId != null">
        #{ provinceId,jdbcType=INTEGER },
      </if>
      <if test="cityId != null">
        #{ cityId,jdbcType=INTEGER },
      </if>
      <if test="districtId != null">
        #{ districtId,jdbcType=INTEGER },
      </if>
      <if test="totalAmount != null">
        #{ totalAmount,jdbcType=DOUBLE },
      </if>
      <if test="accountPayment != null">
        #{ accountPayment,jdbcType=DOUBLE },
      </if>
      <if test="onlinePayment != null">
        #{ onlinePayment,jdbcType=DOUBLE },
      </if>
      <if test="onlinePayType != null">
        #{ onlinePayType,jdbcType=INTEGER },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="orderState != null">
        #{ orderState,jdbcType=INTEGER },
      </if>
      <if test="payState != null">
        #{ payState,jdbcType=INTEGER },
      </if>
      <if test="orderFrom != null">
        #{ orderFrom,jdbcType=INTEGER },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="updateTime != null">
        #{ updateTime,jdbcType=TIMESTAMP },
      </if>
      <if test="updateUser != null">
        #{ updateUser,jdbcType=VARCHAR },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into m_group_buy_order 
    (
      shop_id,
      order_id,
      activity_id,
      origin_customer_id,
      customer_id,
      recipient_name,
      recipient_phone,
      recipient_address,
      zip_code,
      province_id,
      city_id,
      district_id,
      total_amount,
      account_payment,
      online_payment,
      online_pay_type,
      remark,
      order_state,
      pay_state,
      order_from,
      create_time,
      create_user,
      update_time,
      update_user
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.shopId,jdbcType=INTEGER },
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.activityId,jdbcType=INTEGER },
     #{ item.originCustomerId,jdbcType=INTEGER },
     #{ item.customerId,jdbcType=INTEGER },
     #{ item.recipientName,jdbcType=VARCHAR },
     #{ item.recipientPhone,jdbcType=VARCHAR },
     #{ item.recipientAddress,jdbcType=VARCHAR },
     #{ item.zipCode,jdbcType=VARCHAR },
     #{ item.provinceId,jdbcType=INTEGER },
     #{ item.cityId,jdbcType=INTEGER },
     #{ item.districtId,jdbcType=INTEGER },
     #{ item.totalAmount,jdbcType=DOUBLE },
     #{ item.accountPayment,jdbcType=DOUBLE },
     #{ item.onlinePayment,jdbcType=DOUBLE },
     #{ item.onlinePayType,jdbcType=INTEGER },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.orderState,jdbcType=INTEGER },
     #{ item.payState,jdbcType=INTEGER },
     #{ item.orderFrom,jdbcType=INTEGER },
     #{ item.createTime,jdbcType=TIMESTAMP },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.updateTime,jdbcType=TIMESTAMP },
     #{ item.updateUser,jdbcType=VARCHAR }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.GroupBuyOrderExample" resultType="java.lang.Integer">
    select count(*) from m_group_buy_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update m_group_buy_order set 
	      shop_id = #{record.shopId,jdbcType=INTEGER},
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      activity_id = #{record.activityId,jdbcType=INTEGER},
	      origin_customer_id = #{record.originCustomerId,jdbcType=INTEGER},
	      customer_id = #{record.customerId,jdbcType=INTEGER},
	      recipient_name = #{record.recipientName,jdbcType=VARCHAR},
	      recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
	      recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
	      zip_code = #{record.zipCode,jdbcType=VARCHAR},
	      province_id = #{record.provinceId,jdbcType=INTEGER},
	      city_id = #{record.cityId,jdbcType=INTEGER},
	      district_id = #{record.districtId,jdbcType=INTEGER},
	      total_amount = #{record.totalAmount,jdbcType=DOUBLE},
	      account_payment = #{record.accountPayment,jdbcType=DOUBLE},
	      online_payment = #{record.onlinePayment,jdbcType=DOUBLE},
	      online_pay_type = #{record.onlinePayType,jdbcType=INTEGER},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      order_state = #{record.orderState,jdbcType=INTEGER},
	      pay_state = #{record.payState,jdbcType=INTEGER},
	      order_from = #{record.orderFrom,jdbcType=INTEGER},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update m_group_buy_order 
    <set> 
	      <if test="record.shopId != null">
	        shop_id = #{record.shopId,jdbcType=INTEGER},
	      </if>
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.activityId != null">
	        activity_id = #{record.activityId,jdbcType=INTEGER},
	      </if>
	      <if test="record.originCustomerId != null">
	        origin_customer_id = #{record.originCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.customerId != null">
	        customer_id = #{record.customerId,jdbcType=INTEGER},
	      </if>
	      <if test="record.recipientName != null">
	        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.recipientPhone != null">
	        recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.recipientAddress != null">
	        recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
	      </if>
	      <if test="record.zipCode != null">
	        zip_code = #{record.zipCode,jdbcType=VARCHAR},
	      </if>
	      <if test="record.provinceId != null">
	        province_id = #{record.provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="record.cityId != null">
	        city_id = #{record.cityId,jdbcType=INTEGER},
	      </if>
	      <if test="record.districtId != null">
	        district_id = #{record.districtId,jdbcType=INTEGER},
	      </if>
	      <if test="record.totalAmount != null">
	        total_amount = #{record.totalAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="record.accountPayment != null">
	        account_payment = #{record.accountPayment,jdbcType=DOUBLE},
	      </if>
	      <if test="record.onlinePayment != null">
	        online_payment = #{record.onlinePayment,jdbcType=DOUBLE},
	      </if>
	      <if test="record.onlinePayType != null">
	        online_pay_type = #{record.onlinePayType,jdbcType=INTEGER},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.orderState != null">
	        order_state = #{record.orderState,jdbcType=INTEGER},
	      </if>
	      <if test="record.payState != null">
	        pay_state = #{record.payState,jdbcType=INTEGER},
	      </if>
	      <if test="record.orderFrom != null">
	        order_from = #{record.orderFrom,jdbcType=INTEGER},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.updateTime != null">
	        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateUser != null">
	        update_user = #{record.updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.GroupBuyOrder">
    update m_group_buy_order 
    <set> 
	      <if test="shopId != null">
	        shop_id = #{shopId,jdbcType=INTEGER},
	      </if>
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="activityId != null">
	        activity_id = #{activityId,jdbcType=INTEGER},
	      </if>
	      <if test="originCustomerId != null">
	        origin_customer_id = #{originCustomerId,jdbcType=INTEGER},
	      </if>
	      <if test="customerId != null">
	        customer_id = #{customerId,jdbcType=INTEGER},
	      </if>
	      <if test="recipientName != null">
	        recipient_name = #{recipientName,jdbcType=VARCHAR},
	      </if>
	      <if test="recipientPhone != null">
	        recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
	      </if>
	      <if test="recipientAddress != null">
	        recipient_address = #{recipientAddress,jdbcType=VARCHAR},
	      </if>
	      <if test="zipCode != null">
	        zip_code = #{zipCode,jdbcType=VARCHAR},
	      </if>
	      <if test="provinceId != null">
	        province_id = #{provinceId,jdbcType=INTEGER},
	      </if>
	      <if test="cityId != null">
	        city_id = #{cityId,jdbcType=INTEGER},
	      </if>
	      <if test="districtId != null">
	        district_id = #{districtId,jdbcType=INTEGER},
	      </if>
	      <if test="totalAmount != null">
	        total_amount = #{totalAmount,jdbcType=DOUBLE},
	      </if>
	      <if test="accountPayment != null">
	        account_payment = #{accountPayment,jdbcType=DOUBLE},
	      </if>
	      <if test="onlinePayment != null">
	        online_payment = #{onlinePayment,jdbcType=DOUBLE},
	      </if>
	      <if test="onlinePayType != null">
	        online_pay_type = #{onlinePayType,jdbcType=INTEGER},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="orderState != null">
	        order_state = #{orderState,jdbcType=INTEGER},
	      </if>
	      <if test="payState != null">
	        pay_state = #{payState,jdbcType=INTEGER},
	      </if>
	      <if test="orderFrom != null">
	        order_from = #{orderFrom,jdbcType=INTEGER},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="updateUser != null">
	        update_user = #{updateUser,jdbcType=VARCHAR},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.GroupBuyOrder">
    update m_group_buy_order set
        shop_id = #{shopId,jdbcType=INTEGER},
        order_id = #{orderId,jdbcType=VARCHAR},
        activity_id = #{activityId,jdbcType=INTEGER},
        origin_customer_id = #{originCustomerId,jdbcType=INTEGER},
        customer_id = #{customerId,jdbcType=INTEGER},
        recipient_name = #{recipientName,jdbcType=VARCHAR},
        recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
        recipient_address = #{recipientAddress,jdbcType=VARCHAR},
        zip_code = #{zipCode,jdbcType=VARCHAR},
        province_id = #{provinceId,jdbcType=INTEGER},
        city_id = #{cityId,jdbcType=INTEGER},
        district_id = #{districtId,jdbcType=INTEGER},
        total_amount = #{totalAmount,jdbcType=DOUBLE},
        account_payment = #{accountPayment,jdbcType=DOUBLE},
        online_payment = #{onlinePayment,jdbcType=DOUBLE},
        online_pay_type = #{onlinePayType,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR},
        order_state = #{orderState,jdbcType=INTEGER},
        pay_state = #{payState,jdbcType=INTEGER},
        order_from = #{orderFrom,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>