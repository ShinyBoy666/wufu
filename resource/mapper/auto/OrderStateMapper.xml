<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xinmeng.api.dao.auto.OrderStateDao">
  <resultMap id="BaseResultMap" type="cn.xinmeng.api.entity.auto.OrderState">
	    <id column="id" jdbcType="INTEGER" property="id" />
	   <result column="order_id" jdbcType="VARCHAR" property="orderId" />
	   <result column="order_product_id" jdbcType="INTEGER" property="orderProductId" />
	   <result column="state_type" jdbcType="INTEGER" property="stateType" />
	   <result column="state" jdbcType="INTEGER" property="state" />
	   <result column="state_text" jdbcType="VARCHAR" property="stateText" />
	   <result column="remark" jdbcType="VARCHAR" property="remark" />
	   <result column="create_user" jdbcType="VARCHAR" property="createUser" />
	   <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
   </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id,
    order_id,
    order_product_id,
    state_type,
    state,
    state_text,
    remark,
    create_user,
    create_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from o_order_state  where  id = #{id,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderStateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
	  	<when test="fieldList != null and fieldList != '' "> ${fieldList} </when>
	  	<otherwise> <include refid="Base_Column_List" /> </otherwise>
  	</choose>
    from  o_order_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.example.OrderStateExample">
     delete from  o_order_state where  id = #{id,jdbcType=INTEGER} 
   </delete>
  
  <delete id="deleteByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderStateExample">
    delete from  o_order_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="cn.xinmeng.api.entity.auto.OrderState" useGeneratedKeys="true" keyProperty="id">
    insert into o_order_state
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderProductId != null">
        order_product_id,
      </if>
      <if test="stateType != null">
        state_type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="stateText != null">
        state_text,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        #{ id,jdbcType=INTEGER },
      </if>
      <if test="orderId != null">
        #{ orderId,jdbcType=VARCHAR },
      </if>
      <if test="orderProductId != null">
        #{ orderProductId,jdbcType=INTEGER },
      </if>
      <if test="stateType != null">
        #{ stateType,jdbcType=INTEGER },
      </if>
      <if test="state != null">
        #{ state,jdbcType=INTEGER },
      </if>
      <if test="stateText != null">
        #{ stateText,jdbcType=VARCHAR },
      </if>
      <if test="remark != null">
        #{ remark,jdbcType=VARCHAR },
      </if>
      <if test="createUser != null">
        #{ createUser,jdbcType=VARCHAR },
      </if>
      <if test="createTime != null">
        #{ createTime,jdbcType=TIMESTAMP },
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">  
        SELECT LAST_INSERT_ID() as id
    </selectKey>
    insert into o_order_state 
    (
      order_id,
      order_product_id,
      state_type,
      state,
      state_text,
      remark,
      create_user,
      create_time
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >  
    (
     #{ item.orderId,jdbcType=VARCHAR },
     #{ item.orderProductId,jdbcType=INTEGER },
     #{ item.stateType,jdbcType=INTEGER },
     #{ item.state,jdbcType=INTEGER },
     #{ item.stateText,jdbcType=VARCHAR },
     #{ item.remark,jdbcType=VARCHAR },
     #{ item.createUser,jdbcType=VARCHAR },
     #{ item.createTime,jdbcType=TIMESTAMP }
    )  
    </foreach>  
  </insert>
  
  <select id="countByExample" parameterType="cn.xinmeng.api.entity.auto.example.OrderStateExample" resultType="java.lang.Integer">
    select count(*) from o_order_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExample" parameterType="map">
    update o_order_state set 
	      order_id = #{record.orderId,jdbcType=VARCHAR},
	      order_product_id = #{record.orderProductId,jdbcType=INTEGER},
	      state_type = #{record.stateType,jdbcType=INTEGER},
	      state = #{record.state,jdbcType=INTEGER},
	      state_text = #{record.stateText,jdbcType=VARCHAR},
	      remark = #{record.remark,jdbcType=VARCHAR},
	      create_user = #{record.createUser,jdbcType=VARCHAR},
	      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update o_order_state 
    <set> 
	      <if test="record.orderId != null">
	        order_id = #{record.orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="record.orderProductId != null">
	        order_product_id = #{record.orderProductId,jdbcType=INTEGER},
	      </if>
	      <if test="record.stateType != null">
	        state_type = #{record.stateType,jdbcType=INTEGER},
	      </if>
	      <if test="record.state != null">
	        state = #{record.state,jdbcType=INTEGER},
	      </if>
	      <if test="record.stateText != null">
	        state_text = #{record.stateText,jdbcType=VARCHAR},
	      </if>
	      <if test="record.remark != null">
	        remark = #{record.remark,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createUser != null">
	        create_user = #{record.createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createTime != null">
	        create_time = #{record.createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateSelectiveByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderState">
    update o_order_state 
    <set> 
	      <if test="orderId != null">
	        order_id = #{orderId,jdbcType=VARCHAR},
	      </if>
	      <if test="orderProductId != null">
	        order_product_id = #{orderProductId,jdbcType=INTEGER},
	      </if>
	      <if test="stateType != null">
	        state_type = #{stateType,jdbcType=INTEGER},
	      </if>
	      <if test="state != null">
	        state = #{state,jdbcType=INTEGER},
	      </if>
	      <if test="stateText != null">
	        state_text = #{stateText,jdbcType=VARCHAR},
	      </if>
	      <if test="remark != null">
	        remark = #{remark,jdbcType=VARCHAR},
	      </if>
	      <if test="createUser != null">
	        create_user = #{createUser,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null">
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	</set>
	where  id = #{id,jdbcType=INTEGER} 
  </update>
  
  <update id="updateByPrimaryKey" parameterType="cn.xinmeng.api.entity.auto.OrderState">
    update o_order_state set
        order_id = #{orderId,jdbcType=VARCHAR},
        order_product_id = #{orderProductId,jdbcType=INTEGER},
        state_type = #{stateType,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        state_text = #{stateText,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        create_user = #{createUser,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
    where  id = #{id,jdbcType=INTEGER} 
  </update>
</mapper>